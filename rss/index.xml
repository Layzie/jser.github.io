<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>http://jser.info/</link>
    <atom:link href="http://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 17 Aug 2015 21:01:48 +0900</pubDate>
    <lastBuildDate>Mon, 17 Aug 2015 21:01:48 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2015-08-17のJS: redux 1.0.0、flux-utils、Firefox 40</title>
        <description>&lt;p&gt;JSer.info #241 - Fluxのように単方向データの流れを行うフレームワークである&lt;a href=&quot;https://github.com/rackt/redux&quot; title=&quot;Redux&quot;&gt;Redux&lt;/a&gt; 1.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rackt/redux/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · rackt/redux&quot;&gt;Release v1.0.0 · rackt/redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reduxのコンセプトについては作者が以前&lt;a href=&quot;https://medium.com/@dan_abramov/the-evolution-of-flux-frameworks-6c16ad26bb31&quot; title=&quot;The Evolution of Flux Frameworks — Medium&quot;&gt;The Evolution of Flux Frameworks — Medium&lt;/a&gt;という記事で書いています。&lt;/p&gt;

&lt;p&gt;ざっくり書くと、Stateを管理するコンテナ(reduxオブジェクト)を提供することでFluxのActionCreatorとStoreにあたるものをただの関数として書けるようにして、状態の変化が予測できるようにすることを目的としています。&lt;/p&gt;

&lt;p&gt;ドキュメントや&lt;a href=&quot;http://amagitakayosi.hatenablog.com/entry/2015/07/30/000000&quot; title=&quot;人気のFluxフレームワークReduxをさわってみた - マルシテイアは月の上&quot;&gt;人気のFluxフレームワークReduxをさわってみた - マルシテイアは月の上&lt;/a&gt;などを見てみると特徴や、どういう制約を元に作られているかのが分かるかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://rackt.github.io/redux/&quot; title=&quot;Read Me | Redux&quot;&gt;Read Me | Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rackt.github.io/redux/docs/introduction/ThreePrinciples.html&quot; title=&quot;Three Principles | Redux&quot;&gt;Three Principles | Redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また同時期に、今まで他のFluxフレームワークのようにStoreやActionCreatorに関する機能を提供してなかった&lt;a href=&quot;https://github.com/facebook/flux&quot; title=&quot;facebook/flux&quot;&gt;facebook/flux&lt;/a&gt;に&lt;a href=&quot;https://github.com/facebook/flux/blob/master/docs/Flux-Utils.md&quot; title=&quot;Flux Utils&quot;&gt;Flux Utils&lt;/a&gt;という形でそれらの機能が提供されるようになりました。&lt;/p&gt;

&lt;p&gt;以下に簡単にどういう機能が提供されているかについてまとめてあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/azu/e0274b703ef97226b0db&quot; title=&quot;flux-utilsについて&quot;&gt;flux-utilsについて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/immutable-js/&quot; title=&quot;Immutable.js&quot;&gt;Immutable.js&lt;/a&gt;を使っているなどの特徴もありますが、その中でも&lt;code&gt;ReduceStore&lt;/code&gt;のstateを受け取り変更したstateを返す&lt;code&gt;reduce&lt;/code&gt;メソッドが副作用のないただの関数であるべきと書かれているように、reduxと似た概念を提供していることがわかります。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This method should be pure and have no side-effects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;これらは互いに影響受けているようなきがするので、&lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;redux作者&lt;/a&gt;と&lt;a href=&quot;https://twitter.com/fisherwebdev&quot;&gt;flux作者&lt;/a&gt;の会話を見てみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/gaearon/d77ca812015c0356654f&quot; title=&quot;Combining Stateless Stores&quot;&gt;Combining Stateless Stores&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Hate switch statements? Redux isn&amp;#39;t opinionated as long as you give it (state, action) =&amp;gt; state in the end. &lt;a href=&quot;http://t.co/eMlpqsvnFZ&quot;&gt;pic.twitter.com/eMlpqsvnFZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/606075907808313344&quot;&gt;June 3, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mozilla.jp/firefox/40.0/releasenotes/&quot; title=&quot;Firefox 40&quot;&gt;Firefox 40&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;開発者ツールのPerformanceツールが改善され、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall&quot;&gt;Waterfall&lt;/a&gt; view、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Call_Tree&quot;&gt;Call Tree&lt;/a&gt; view、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Flame_Chart&quot;&gt;Flame Chart&lt;/a&gt; viewなどに対応しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/06/new-performance-tools-in-firefox-developer-edition-40/&quot; title=&quot;New Performance Tools in Firefox Developer Edition 40 ✩ Mozilla Hacks – the Web developer blog&quot;&gt;New Performance Tools in Firefox Developer Edition 40 ✩ Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/40&quot; title=&quot;Firefox 40 for developers - Mozilla | MDN&quot;&gt;Firefox 40 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また同時に&lt;a href=&quot;http://www.mozilla.jp/firefox/38.2.0/releasenotes/&quot; title=&quot;延長サポート版 (ESR)&quot;&gt;延長サポート版 (ESR)&lt;/a&gt;としてFirefox 38.2.0がリリースされています&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.0.0-·-rackt/redux&quot;&gt;Release v1.0.0 · rackt/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rackt/redux/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · rackt/redux&quot;&gt;github.com/rackt/redux/releases/tag/v1.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Redux 1.0.0リリース。&lt;br&gt;
Stateを管理するコンテナを提供することでFluxのActionCreatorとStoreにあたるものをただの関数として書けるようにし、単方向データの流れを行うライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;1.1-release&quot;&gt;1.1 Release&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.polymer-project.org/announcements/2015/08/13/1.1-release/&quot; title=&quot;1.1 Release&quot;&gt;blog.polymer-project.org/announcements/2015/08/13/1.1-release/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Polymer 1.1リリース。&lt;br&gt;
コンポーネントとグローバルスコープでStyleを共有する仕組みの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/laco0416/items/51a3f7863602c1d35e8a&quot; title=&quot;Polymer 1.1 リリース - Qiita&quot;&gt;Polymer 1.1 リリース - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mozillazine.jp-»-blog-archive-»-firefox-40-がリリースされた&quot;&gt;MozillaZine.jp » Blog Archive » Firefox 40 がリリースされた&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://mozillazine.jp/?p=4868&quot; title=&quot;MozillaZine.jp » Blog Archive » Firefox 40 がリリースされた&quot;&gt;mozillazine.jp/?p=4868&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 40リリース。&lt;br&gt;
&lt;code&gt;return&lt;/code&gt;に書かれた到達できないコードへの警告がコンソールへ出るように開発者ツールの改善、Web Audio APIの仕様追従、Web Animations APIの仕様追従など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/40/Site_Compatibility&quot; title=&quot;Firefox 40 サイト互換性情報 - Mozilla | MDN&quot;&gt;Firefox 40 サイト互換性情報 - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/40&quot; title=&quot;Firefox 40 for developers - Mozilla | MDN&quot;&gt;Firefox 40 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;4.0-is-the-new-1.0-—-node-&amp;amp;-javascript-—-medium&quot;&gt;4.0 is the new 1.0 — Node &amp;amp; JavaScript — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/node-js-javascript/4-0-is-the-new-1-0-386597a3436d&quot; title=&quot;4.0 is the new 1.0 — Node &amp;amp; JavaScript — Medium&quot;&gt;medium.com/node-js-javascript/4-0-is-the-new-1-0-386597a3436d&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;歴史&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 4.0がio.jsとのマージが完了したバージョンとしてリリースされる予定。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;browserify-dependencies-in-depth!-|-teji-tech-blog&quot;&gt;Browserify dependencies in depth! | TEJI TECH BLOG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tejitak.com/blog/?p=1468&quot; title=&quot;Browserify dependencies in depth! | TEJI TECH BLOG&quot;&gt;www.tejitak.com/blog/?p=1468&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserifyでの依存関係の解決パターンについて。&lt;br&gt;
依存するモジュールのバージョンが複数ある場合の問題についての色々なアプローチ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-in-depth:-modules-✩-mozilla-hacks-–-the-web-developer-blog&quot;&gt;ES6 In Depth: Modules ✩ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot; title=&quot;ES6 In Depth: Modules ✩ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2015/08/es6-in-depth-modules/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6 modulesのimport/exportの多様な構文のそれぞれの動作についての解説。&lt;br&gt;
Moduleの仕様を分解してみた時にLoadingについてはECMAScriptでは未定義であること、構文的にstaticであることなどについて書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-coding-style/es6-coding-style-en.md-at-master-·-gf-web/es6-coding-style&quot;&gt;es6-coding-style/es6-coding-style-en.md at master · gf-web/es6-coding-style&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gf-web/es6-coding-style/blob/master/es6-coding-style-en.md&quot; title=&quot;es6-coding-style/es6-coding-style-en.md at master · gf-web/es6-coding-style&quot;&gt;github.com/gf-web/es6-coding-style/blob/master/es6-coding-style-en.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6コーディングスタイルガイド。&lt;br&gt;
Destructuringの使いすぎへの注意、ES5での書き方をES6の機能でキレイに書けるケースについて比較、moduleの&lt;code&gt;*&lt;/code&gt;や&lt;code&gt;as&lt;/code&gt;について書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flux-utilsについて&quot;&gt;flux-utilsについて&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/azu/e0274b703ef97226b0db&quot; title=&quot;flux-utilsについて&quot;&gt;gist.github.com/azu/e0274b703ef97226b0db&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Facebookのfluxモジュールに追加されたutilsについて。&lt;br&gt;
今まではDispatcherのみだったがStoreやReact Componentと連携するためのContainerなどが提供されたことについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;フロントエンドmvcとflux-//-speaker-deck&quot;&gt;フロントエンドMVCとFlux // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/sangotaro/hurontoendomvctoflux&quot; title=&quot;フロントエンドMVCとFlux // Speaker Deck&quot;&gt;speakerdeck.com/sangotaro/hurontoendomvctoflux&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fluxとはどういうものなのかについてのスライド。&lt;br&gt;
MVCと何が違って何が違わないのかがわかりやすく書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mdast---markdown-processor-powered-by-plug-ins&quot;&gt;mdast - markdown processor powered by plug-ins&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://mdast.js.org/&quot; title=&quot;mdast - markdown processor powered by plug-ins&quot;&gt;mdast.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Markdownパーサであるmdastのサイト。&lt;br&gt;
プラグインを使ってMarkdownからHTMLへの変換、Lintなど様々なことができる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;perf.rocks&quot;&gt;Perf.Rocks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://perf.rocks/&quot; title=&quot;Perf.Rocks&quot;&gt;perf.rocks/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ウェブパフォーマンスについての記事やツール、人、スライド、動画、書籍などについてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;relay-|-a-javascript-framework-for-building-data-driven-react-applications&quot;&gt;Relay | A JavaScript framework for building data-driven React applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/relay/&quot; title=&quot;Relay | A JavaScript framework for building data-driven React applications&quot;&gt;facebook.github.io/relay/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;facebook&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;GraphQLを使ったデータのやりとりをするフレームワーク。&lt;br&gt;
Relay.QLなどES6 template literalが前提になった作りになっていて面白い。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2015/08/11/relay-technical-preview.html&quot; title=&quot;Relay Technical Preview | React&quot;&gt;Relay Technical Preview | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;patrick-steele-idem/morphdom&quot;&gt;patrick-steele-idem/morphdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/patrick-steele-idem/morphdom&quot; title=&quot;patrick-steele-idem/morphdom&quot;&gt;github.com/patrick-steele-idem/morphdom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Virutal DOMではなくDOMを使ってdiff/patchをしてDOM Nodeを置き換えるライブラリ。&lt;br&gt;
&lt;code&gt;virtual-dom&lt;/code&gt;と比較したベンチマークも書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jamesshore/quixote&quot;&gt;jamesshore/quixote&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jamesshore/quixote&quot; title=&quot;jamesshore/quixote&quot;&gt;github.com/jamesshore/quixote&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;mochaなどと組み合わせて使えるCSSのユニットテスト向けのassertionライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;scottcorgan/immu&quot;&gt;scottcorgan/immu&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/scottcorgan/immu&quot; title=&quot;scottcorgan/immu&quot;&gt;github.com/scottcorgan/immu&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Immutable Objectを扱うライブラリ。&lt;br&gt;
Object.definePropertyやObject.freezeを使ってArrayやObjectの変更を防止したオブジェクトを作成する&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;designing-for-performance-by-lara-callender-hogan&quot;&gt;Designing for Performance by Lara Callender Hogan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://designingforperformance.com/&quot; title=&quot;Designing for Performance by Lara Callender Hogan&quot;&gt;designingforperformance.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのパフォーマンスについての書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 17 Aug 2015 20:21:00 +0900</pubDate>
        <link>http://jser.info/2015/08/17/redux-flux-utils-firefox40/</link>
        <guid isPermaLink="true">http://jser.info/2015/08/17/redux-flux-utils-firefox40/</guid>
        
        <category>flux</category>
        
        <category>library</category>
        
        <category>firefox</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2015-08-10のJS: io.js 3.0、RxJS 3.0、MSEdgeとは</title>
        <description>&lt;p&gt;JSer.info #240 - io.js &lt;a href=&quot;https://github.com/nodejs/io.js/blob/master/CHANGELOG.md#2015-08-04-version-300-rvagg&quot; title=&quot;3.0.0&quot;&gt;3.0.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;V8 4.4.63.26へのアップデートによりES6のサポート改善、同じくV8アップデート起因のNative APIの仕様変更などが含まれています。&lt;br&gt;
また、Node.jsの&lt;code&gt;Buffer&lt;/code&gt;が&lt;code&gt;TypedArray&lt;/code&gt;をベースとしたものへと変更されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/io.js/blob/master/CHANGELOG.md#2015-08-04-version-300-rvagg&quot; title=&quot;io.js/CHANGELOG.md at master · nodejs/io.js&quot;&gt;io.js/CHANGELOG.md at master · nodejs/io.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/io.js/wiki/Breaking-Changes#300-from-2x&quot; title=&quot;Breaking Changes · nodejs/io.js Wiki&quot;&gt;Breaking Changes · nodejs/io.js Wiki&lt;/a&gt; &lt;strong&gt;3.0.0 from 2.x&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;v2.0.0からv3.0.0までにどのような変更があったかについては以下で詳しくまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2015/08/07/002535&quot; title=&quot;io.js v3.0.0 がリリースされました。 - from scratch&quot;&gt;io.js v3.0.0 がリリースされました。 - from scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Reactive-Extensionsから&lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/releases/tag/v3.0.0&quot; title=&quot;RxJS Version 3.0&quot;&gt;RxJS 3.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/releases/tag/v3.0.0&quot; title=&quot;Release RxJS Version 3.0 · Reactive-Extensions/RxJS&quot;&gt;Release RxJS Version 3.0 · Reactive-Extensions/RxJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CoreパッケージとLiteパッケージへの追加や&lt;code&gt;Rx.Observable.fromEvent&lt;/code&gt;などのAPIの仕様変更、またいくつかのメソッドのaliasがdeprecatedとなったりしています。&lt;/p&gt;

&lt;p&gt;RxJS 3.0といえば、&lt;a href=&quot;https://github.com/ReactiveX&quot; title=&quot;ReactiveX&quot;&gt;ReactiveX&lt;/a&gt;の方の&lt;a href=&quot;https://github.com/ReactiveX/RxJS&quot; title=&quot;ReactiveX/RxJS&quot;&gt;ReactiveX/RxJS&lt;/a&gt;が最初は3.0と名乗っていましたが、&lt;br&gt;
現在は&lt;a href=&quot;https://github.com/zenparsing/es-observable&quot; title=&quot;ECMAScript Observable&quot;&gt;ECMAScript Observable&lt;/a&gt;のプロポーサルに合わせた実装となる事を目指しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/azu/b426e536aa3f09d4283c&quot; title=&quot;async/await、Rx、observableのECMAScript近況&quot;&gt;async/await、Rx、observableのECMAScript近況&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/osamum/archive/2015/08/07/about-windows-10-s-new-web-browsers.aspx&quot; title=&quot;Edge と IE:まるっと理解する、Windows 10 搭載に搭載される Web ブラウザーについて - monoe&amp;#39;s blog - Site Home - MSDN Blogs&quot;&gt;Edge と IE:まるっと理解する、Windows 10 搭載に搭載される Web ブラウザーについて - monoe&amp;#39;s blog - Site Home - MSDN Blogs&lt;/a&gt;という記事ではMSEdgeとはどういうものかについてよくまとめられています。&lt;/p&gt;

&lt;p&gt;MSEdgeがどういう経緯で作られたかやIEと比べての特徴紹介、フィードバック方法や参考資料について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource&quot;&gt;azu/browser-javascript-resource&lt;/a&gt;にそれぞれのブラウザについてのフィードバック方法をまとめた時も思いましたが、ブラウザベンダーが様々な情報を提供しているので、目を通してみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;io.js/changelog.md-at-master-·-nodejs/io.js&quot;&gt;io.js/CHANGELOG.md at master · nodejs/io.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/io.js/blob/master/CHANGELOG.md#2015-08-04-version-300-rvagg&quot; title=&quot;io.js/CHANGELOG.md at master · nodejs/io.js&quot;&gt;github.com/nodejs/io.js/blob/master/CHANGELOG.md#2015-08-04-version-300-rvagg&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;io.js 3.0.0リリース。&lt;br&gt;
V8のアップデートによりES6のサポート改善、&lt;code&gt;Buffer.concat&lt;/code&gt;の挙動変更などいくつか非互換の変更も含まれる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/io.js/wiki/Breaking-Changes#300-from-2x&quot; title=&quot;Breaking Changes · nodejs/io.js Wiki&quot;&gt;Breaking Changes · nodejs/io.js Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2015/08/07/002535&quot; title=&quot;io.js v3.0.0 がリリースされました。 - from scratch&quot;&gt;io.js v3.0.0 がリリースされました。 - from scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-rxjs-version-3.0-·-reactive-extensions/rxjs&quot;&gt;Release RxJS Version 3.0 · Reactive-Extensions/RxJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/releases/tag/v3.0.0&quot; title=&quot;Release RxJS Version 3.0 · Reactive-Extensions/RxJS&quot;&gt;github.com/Reactive-Extensions/RxJS/releases/tag/v3.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;RxJS 3.0リリース。&lt;br&gt;
CoreパッケージとLiteパッケージへの追加。&lt;br&gt;
&lt;code&gt;Rx.Observable.fromEvent&lt;/code&gt;/&lt;code&gt;Rx.Observable.spawn&lt;/code&gt;/&lt;code&gt;Rx.Observable.prototype.scan&lt;/code&gt;の引数の破壊的な変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-6.0.0-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 6.0.0 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/6.0.0/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 6.0.0 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/6.0.0/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 6.0.0リリース。&lt;br&gt;
io.js 2.0以上が必要に、パフォーマンスの改善、&lt;code&gt;window.onerror&lt;/code&gt;が動くように、&lt;code&gt;URL&lt;/code&gt;オブジェクトのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-1.1.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint 1.1.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2015/08/eslint-1.1.0-released&quot; title=&quot;ESLint 1.1.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2015/08/eslint-1.1.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 1.1.0リリース。&lt;br&gt;
grep-styleのformatterの追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-opera-31-released&quot;&gt;Dev.Opera — Opera 31 released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-31/&quot; title=&quot;Dev.Opera — Opera 31 released&quot;&gt;dev.opera.com/blog/opera-31/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Opera 31(based on Chromium 44)リリース。&lt;br&gt;
&lt;code&gt;document.scrollingElement&lt;/code&gt;、ES6 computed property names、Unicode code point escapesのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;edge-と-ie:まるっと理解する、windows-10-搭載に搭載される-web-ブラウザーについて---monoe&amp;#x27;s-blog---site-home---msdn-blogs&quot;&gt;Edge と IE:まるっと理解する、Windows 10 搭載に搭載される Web ブラウザーについて - monoe&amp;#x27;s blog - Site Home - MSDN Blogs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/osamum/archive/2015/08/07/about-windows-10-s-new-web-browsers.aspx&quot; title=&quot;Edge と IE:まるっと理解する、Windows 10 搭載に搭載される Web ブラウザーについて - monoe&amp;#39;s blog - Site Home - MSDN Blogs&quot;&gt;blogs.msdn.com/b/osamum/archive/2015/08/07/about-windows-10-s-new-web-browsers.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;IE&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;IEとMSEdgeについて。&lt;br&gt;
MSEdgeではどのような部分が変わるのか、実装されているAPI、フィードバック方法などがまとめられている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;オープンソースソフトウェアへの取り組み：-技術コラム・特集：-react.jsでoss-rader-scopeを再実装する：-第1回-はじめに-（1/1）-｜-scsk株式会社&quot;&gt;オープンソースソフトウェアへの取り組み： 技術コラム・特集： React.jsでOSS Rader Scopeを再実装する： 第1回 はじめに （1/1） ｜ SCSK株式会社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.scsk.jp/product/oss/tec_guide/reactjs/1_column1_1.html&quot; title=&quot;オープンソースソフトウェアへの取り組み： 技術コラム・特集： React.jsでOSS Rader Scopeを再実装する： 第1回 はじめに （1/1） ｜ SCSK株式会社&quot;&gt;www.scsk.jp/product/oss/tec_guide/reactjs/1_column1_1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ウェブアプリをReactを使って作る話。&lt;br&gt;
Reactの使い方、コンポーネント、Fluxアーキテクチャの解説、Nashornでのサーバサイドレンダリングなどよくまとまってる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-decorators-on-functions&quot;&gt;ECMAScript decorators on functions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rreverser.com/ecmascript-decorators-and-functions/&quot; title=&quot;ECMAScript decorators on functions&quot;&gt;rreverser.com/ecmascript-decorators-and-functions/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES.nextで提案されているDecoratorの仕組みとユースケースについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-in-depth:-subclassing-✩-mozilla-hacks-–-the-web-developer-blog&quot;&gt;ES6 In Depth: Subclassing ✩ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-subclassing/&quot; title=&quot;ES6 In Depth: Subclassing ✩ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2015/08/es6-in-depth-subclassing/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6 Classesのサブクラスについて。&lt;br&gt;
サブクラスの使い方、&lt;code&gt;super&lt;/code&gt;、ビルトインクラスのサブクラス、継承したクラスのConstructorの書き方、&lt;code&gt;new.target&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;getting-started-with-ecmascript-6&quot;&gt;Getting started with ECMAScript 6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2015/08/getting-started-es6.html&quot; title=&quot;Getting started with ECMAScript 6&quot;&gt;www.2ality.com/2015/08/getting-started-es6.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;BabelをREPLとして使い、ES5で書いてたものをES6の機能で書きながらES6について学んで行くチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-javascript-looping-evolution--telerik-developer-network&quot;&gt;The JavaScript Looping Evolution -Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/the-javascript-looping-evolution/&quot; title=&quot;The JavaScript Looping Evolution -Telerik Developer Network&quot;&gt;developer.telerik.com/featured/the-javascript-looping-evolution/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのループ周りの処理の変遷とES6でのループ処理について。&lt;br&gt;
forループ、for-in、forEachなどのArrayメソッドによるループ、ES6のiterableとiteratorを使った書き方などについての話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-components-weekly&quot;&gt;Web Components Weekly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://webcomponentsweekly.me/&quot; title=&quot;Web Components Weekly&quot;&gt;webcomponentsweekly.me/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web ComponentsについてのWeeklyメールマガジン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;morishitter/cssfmt-·-github&quot;&gt;morishitter/cssfmt · GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/morishitter/cssfmt&quot; title=&quot;morishitter/cssfmt · GitHub&quot;&gt;github.com/morishitter/cssfmt&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS整形ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;brenolf/polyjuice&quot;&gt;brenolf/polyjuice&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/brenolf/polyjuice&quot; title=&quot;brenolf/polyjuice&quot;&gt;github.com/brenolf/polyjuice&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSHintの設定ファイルをESLintの設定ファイルに変換するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dbashford/textract&quot;&gt;dbashford/textract&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dbashford/textract&quot; title=&quot;dbashford/textract&quot;&gt;github.com/dbashford/textract&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PDFやDocファイル、画像など様々なフォーマットからテキストを取り出す事が出来るライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;h2non/toxy&quot;&gt;h2non/toxy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/h2non/toxy&quot; title=&quot;h2non/toxy&quot;&gt;github.com/h2non/toxy&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proxy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;サーバからレスポンスの色々なネットワーク問題をシミュレート出来るProxyライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;o&amp;#x27;reilly-japan---mithril&quot;&gt;O&amp;#x27;Reilly Japan - Mithril&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oreilly.co.jp/books/9784873117447/&quot; title=&quot;O&amp;#39;Reilly Japan - Mithril&quot;&gt;www.oreilly.co.jp/books/9784873117447/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Mithrilについての電子書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mithril.js.org/&quot; title=&quot;Mithril&quot;&gt;Mithril&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-deep-dive&quot;&gt;TypeScript Deep Dive&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://basarat.gitbooks.io/typescript/&quot; title=&quot;TypeScript Deep Dive&quot;&gt;basarat.gitbooks.io/typescript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;atom-typescriptのbasaratさんによるTypeScriptについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 10 Aug 2015 22:23:00 +0900</pubDate>
        <link>http://jser.info/2015/08/10/io.js3.0-rxjs3.0-msedge/</link>
        <guid isPermaLink="true">http://jser.info/2015/08/10/io.js3.0-rxjs3.0-msedge/</guid>
        
        <category>io.js</category>
        
        <category>Rx</category>
        
        <category>MSEdge</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2015-08-03のJS: ESLint 1.0.0、JSCS 2.0.0、Esprima 2.5.0</title>
        <description>&lt;p&gt;JSer.info #239 - JavaScript Lintツールである&lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt; 1.0.0がリリースされました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--reset&lt;/code&gt;のオプションがデフォルトとなり&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-1.0.0#all-rules-off-by-default&quot; title=&quot;All Rules Off by Default&quot;&gt;全てのルールがデフォルトOFF&lt;/a&gt;となりました。今までのデフォルトは&lt;code&gt;&amp;quot;eslint:recommended&amp;quot;&lt;/code&gt;という設定を使うことでできるようです。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{
    &amp;quot;extends&amp;quot;: &amp;quot;eslint:recommended&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/blog/2015/07/eslint-1.0.0-released/&quot; title=&quot;ESLint 1.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;ESLint 1.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-1.0.0&quot; title=&quot;Migrating to v1.0.0&quot;&gt;Migrating to v1.0.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;JavaScriptのスタイルチェックツールである&lt;a href=&quot;https://github.com/jscs-dev/node-jscs&quot;&gt;JSCS&lt;/a&gt; 2.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v2.0.0&quot; title=&quot;Release 2.0.0 · jscs-dev/node-jscs&quot;&gt;Release 2.0.0 · jscs-dev/node-jscs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;esnext&lt;/code&gt;というオプションでES6(とJSX)のサポート、スタイルの自動修正機能を改善、ES6関連のルールの追加、&lt;code&gt;//&lt;/code&gt;コメントでチェックを無効化などがサポートされました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if (x) y(); // jscs:ignore requireCurlyBraces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;JavaScriptのパーサライブラリである&lt;a href=&quot;http://esprima.org/&quot; title=&quot;Esprima&quot;&gt;Esprima&lt;/a&gt; 2.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/esprima/blob/2.5.0/ChangeLog&quot; title=&quot;esprima/ChangeLog at 2.5.0 · jquery/esprima&quot;&gt;esprima/ChangeLog at 2.5.0 · jquery/esprima&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.5.0で&lt;a href=&quot;https://github.com/jquery/esprima/issues/1099&quot;&gt;ES6の機能をフルサポート&lt;/a&gt;したため、ES6のコードを全てパースできるようになりました。&lt;/p&gt;

&lt;p&gt;先ほど出てきた&lt;a href=&quot;https://github.com/jscs-dev/node-jscs&quot;&gt;JSCS&lt;/a&gt;はEsprimaを、&lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt;はEsprimaをforkした&lt;a href=&quot;https://github.com/eslint/espree&quot; title=&quot;Espree&quot;&gt;Espree&lt;/a&gt;をパーサとして利用しています。&lt;/p&gt;

&lt;p&gt;また&lt;a href=&quot;https://github.com/hzoo&quot;&gt;@hzoo&lt;/a&gt;さんによりどちらも&lt;a href=&quot;https://github.com/jscs-dev/babel-jscs&quot; title=&quot;babel-jscs&quot;&gt;babel-jscs&lt;/a&gt;と&lt;a href=&quot;https://github.com/babel/babel-eslint&quot; title=&quot;babel-eslint&quot;&gt;babel-eslint&lt;/a&gt;という形で、BabelがサポートするexperimentalなES.nextのコードもサポートしています。&lt;/p&gt;

&lt;p&gt;このbabel-*の仕組みとしては、Babelが内蔵するacornベースのパーサを使いパースした結果を、Esprima互換のAST/CSTに変換することで、ES.nextのコードもJSCSとESLintで使えるようにしています。&lt;/p&gt;

&lt;p&gt;JavaScriptのASTについては&lt;a href=&quot;https://github.com/estree/estree&quot; title=&quot;ESTree&quot;&gt;ESTree&lt;/a&gt;というデファクトスタンダードがありますが、CST(Concrete Syntax Tree)についてはまだ標準的なものはありません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eli.thegreenplace.net/2009/02/16/abstract-vs-concrete-syntax-trees/&quot; title=&quot;Abstract vs. Concrete Syntax Trees - Eli Bendersky&amp;#39;s website&quot;&gt;Abstract vs. Concrete Syntax Trees - Eli Bendersky&amp;#39;s website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ESLint、JSCSどちらも、ESTreeのAST仕様では定義されていない&amp;quot;スペース&amp;quot;や&amp;quot;;&amp;quot;(セミコロン)といった文字列などもチェックに利用しています。&lt;/p&gt;

&lt;p&gt;JSCSでは&lt;a href=&quot;https://github.com/mdevils/cst&quot; title=&quot;CST&quot;&gt;CST&lt;/a&gt;というConcrete Syntax Treeの実装を作り使うようになっていて、ESLintもEsprima由来のtokenを利用しています。&lt;/p&gt;

&lt;p&gt;長くなりましたが、何が書きたかったかというと土台となるEsprimaなどのJavaScriptパーサがES6に対応し、それらを使うESLintやJSCSなどもES6へ対応したため、こういったツールがまとめて一段落したように見えます。&lt;/p&gt;

&lt;p&gt;そのため、次はCSTなどでよりツールを便利にするために一歩踏み出し始めた感じなので、この辺はまだまだ色々な進化がありそうな気がします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mozaic.fm/post/125673651143/19-es7&quot; title=&quot;#19 ES7 | mozaic.fm&quot;&gt;#19 ES7 | mozaic.fm&lt;/a&gt;でもこういったASTツールチェインの話をしているので聞いてみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;お知らせ&quot;&gt;お知らせ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://realtime.jser.info/&quot; title=&quot;Realtime JSer.info&quot;&gt;Realtime JSer.info&lt;/a&gt; β始めました。&lt;br&gt;
JSer.infoは週一ですが、&lt;a href=&quot;http://realtime.jser.info/&quot;&gt;realtime.jser.info&lt;/a&gt;は名前の通りその場その場で更新されます。&lt;/p&gt;

&lt;p&gt;何かご意見あったら以下のIssueとかに下さい。&lt;br&gt;
(hugoで作り直すPRとかも募集してます)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/47&quot; title=&quot;realtime.jser.info · Issue #47 · jser/jser.info&quot;&gt;realtime.jser.info · Issue #47 · jser/jser.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-1.0.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint 1.0.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2015/07/eslint-1.0.0-released&quot; title=&quot;ESLint 1.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2015/07/eslint-1.0.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 1.0.0リリース。&lt;br&gt;
ES6の対応改善、&lt;code&gt;--reset&lt;/code&gt;がデフォルトの挙動となり設定なしではルールを持たないようになった。&lt;br&gt;
&amp;quot;eslint:recommended&amp;quot;の設定を継承することで今までと同じデフォルト設定が得られる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-1.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Documentation - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/armorik83/items/228b97bee25aa33c9850&quot; title=&quot;ESLint 1.0.0新ルールまとめ - Qiita&quot;&gt;ESLint 1.0.0新ルールまとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.0.0-·-jscs-dev/node-jscs&quot;&gt;Release 2.0.0 · jscs-dev/node-jscs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v2.0.0&quot; title=&quot;Release 2.0.0 · jscs-dev/node-jscs&quot;&gt;github.com/jscs-dev/node-jscs/releases/tag/v2.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptスタイルチェックツールJSCS 2.0.0リリース。&lt;br&gt;
ES.nextをサポートする&lt;code&gt;--esnext&lt;/code&gt;フラグの追加、CSTを実装しAutofixingに利用するように、ES6に対応したルールの追加、コメントによるルールの無効化のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mdevils/cst&quot; title=&quot;mdevils/cst&quot;&gt;mdevils/cst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.5.0-·-jquery/esprima&quot;&gt;Release 2.5.0 · jquery/esprima&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jquery/esprima/releases/tag/2.5.0&quot; title=&quot;Release 2.5.0 · jquery/esprima&quot;&gt;github.com/jquery/esprima/releases/tag/2.5.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Esprima 2.5.0リリース。&lt;br&gt;
ES6の全ての機能をパースできるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/esprima/blob/2.5.0/ChangeLog&quot; title=&quot;esprima/ChangeLog at 2.5.0 · jquery/esprima&quot;&gt;esprima/ChangeLog at 2.5.0 · jquery/esprima&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/esprima/issues/1099&quot; title=&quot;ES6 Main Tracking Issue · Issue #1099 · jquery/esprima&quot;&gt;ES6 Main Tracking Issue · Issue #1099 · jquery/esprima&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1l02VT94tdphwUUZfPJorRYOY0Q_v41R_TyYhKayiP9M/edit&quot; title=&quot;Esprima Meeting Agenda - Google ドキュメント&quot;&gt;Esprima Meeting Agenda - Google ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flow-|-version-0.14.0&quot;&gt;Flow | Version 0.14.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://flowtype.org/blog/2015/07/29/Version-0.14.0.html&quot; title=&quot;Flow | Version 0.14.0&quot;&gt;flowtype.org/blog/2015/07/29/Version-0.14.0.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.14.0リリース。&lt;br&gt;
型指定してないパラメータを&lt;code&gt;any&lt;/code&gt;と扱うように、Flowコメント構文をブロックコメント内で使えるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;|-intern-3-is-here!-|-blog-|-sitepen&quot;&gt;| Intern 3 is here! | Blog | SitePen&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepen.com/blog/2015/07/30/intern-3-is-here/&quot; title=&quot;| Intern 3 is here! | Blog | SitePen&quot;&gt;www.sitepen.com/blog/2015/07/30/intern-3-is-here/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptテストフレームワークのIntern 3リリース。&lt;br&gt;
IE8のサポート終了、ES6の対応改善、d.tsを追加、QUnit互換のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/theintern/intern/releases/3.0.0&quot; title=&quot;Release 3.0.0 · theintern/intern&quot;&gt;Release 3.0.0 · theintern/intern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;linting-javascript-in-2015&quot;&gt;Linting JavaScript in 2015&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.lauritz.me/linting-javascript-in-2015/&quot; title=&quot;Linting JavaScript in 2015&quot;&gt;blog.lauritz.me/linting-javascript-in-2015/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLintを使ってJavaScriptのコードをLintする方法についての紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-regular-expression-features-in-ecmascript-6&quot;&gt;New regular expression features in ECMAScript 6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2015/07/regexp-es6.html&quot; title=&quot;New regular expression features in ECMAScript 6&quot;&gt;www.2ality.com/2015/07/regexp-es6.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;正規表現&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6で追加された正規表現の要素について。&lt;br&gt;
sticky flag、Unicode flag、&lt;code&gt;\u{...}&lt;/code&gt;によるEscape sequencesについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flux-inside-web-workers-—-medium&quot;&gt;Flux inside Web Workers — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@nsisodiya/flux-inside-web-workers-cc51fb463882&quot; title=&quot;Flux inside Web Workers — Medium&quot;&gt;medium.com/@nsisodiya/flux-inside-web-workers-cc51fb463882&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;DOM lessな実装をしてればWeb Workerでも動かせる。&lt;br&gt;
FluxをベースにStore-&amp;gt;View、View-&amp;gt;ActionをpostMessageでやりとりすることで、View以外をWeb Worker上で処理できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;isomorphic-architecture-を実装してるときの細かいアレコレ-::ハブろぐ&quot;&gt;Isomorphic Architecture を実装してるときの細かいアレコレ ::ハブろぐ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://havelog.ayumusato.com/develop/javascript/e682-universal_architecture_tips.html&quot; title=&quot;Isomorphic Architecture を実装してるときの細かいアレコレ ::ハブろぐ&quot;&gt;havelog.ayumusato.com/develop/javascript/e682-universal_architecture_tips.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;isomorphic&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;シングルページアプリケーションとサーバサイドレンダリングを扱う際に起こる問題と解決策について。&lt;br&gt;
設定の共有をするか、UAの評価、React Componentの&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;への適応方法、ライフサイクルの管理などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;non-blocking-asynchronous-json.parse-using-the-fetch-api&quot;&gt;Non-blocking Asynchronous JSON.parse Using The Fetch API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://azimi.me/2015/07/30/non-blocking-async-json-parse.html&quot; title=&quot;Non-blocking Asynchronous JSON.parse Using The Fetch API&quot;&gt;azimi.me/2015/07/30/non-blocking-async-json-parse.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch APIで提供されてる&lt;code&gt;Response&lt;/code&gt;オブジェクトを使い&lt;code&gt;(new Response(string)).json()&lt;/code&gt;を非同期JSON.parseとして利用する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learning-riotjs---video-tutorial-playlist-@eggheadio&quot;&gt;Learning RiotJS - Video Tutorial Playlist @eggheadio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://egghead.io/playlists/learning-riotjs&quot; title=&quot;Learning RiotJS - Video Tutorial Playlist @eggheadio&quot;&gt;egghead.io/playlists/learning-riotjs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Riot.JSについてのスクリーンキャストシリーズ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mithril&quot;&gt;Mithril&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://mithril-ja.js.org/&quot; title=&quot;Mithril&quot;&gt;mithril-ja.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Mithrilの日本語訳ページ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webrtcセキュリティレポート-·-a-study-of-webrtc-security&quot;&gt;WebRTCセキュリティレポート · A Study of WebRTC Security&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://webrtc-security.github.io/report_ja/&quot; title=&quot;WebRTCセキュリティレポート · A Study of WebRTC Security&quot;&gt;webrtc-security.github.io/report_ja/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;セキュリティ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebRTCのセキュリティについての文章。&lt;br&gt;
WebRTCがどういう仕組みで動いているのか、信頼性が何をベースとして構築されているか、暗号のメカニズム、安全に扱う方法についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/rotsuya/intro-webrtcppt&quot; title=&quot;WebRTC入門+最新動向&quot;&gt;WebRTC入門+最新動向&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-architecture---o&amp;#x27;reilly-media&quot;&gt;Front-End Architecture - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920040156.do&quot; title=&quot;Front-End Architecture - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920040156.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2015年12月発売&lt;br&gt;
CSSプリプロセス、開発ワークフローツール、JavaScriptのライブラリなどフロントエンドについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 21:52:00 +0900</pubDate>
        <link>http://jser.info/2015/08/03/eslint-jscs-esprima/</link>
        <guid isPermaLink="true">http://jser.info/2015/08/03/eslint-jscs-esprima/</guid>
        
        <category>Lint</category>
        
        <category>Tool</category>
        
        <category>AST</category>
        
        <category>ES6</category>
        
        <category>JavaScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2015-07-28のJS: Chrome 45β、ES6チュートリアル、Chrome開発者ツール本</title>
        <description>&lt;p&gt;JSer.info #238 - &lt;a href=&quot;http://blog.chromium.org/2015/07/chrome-45-beta-new-es2015-features.html&quot; title=&quot;Chrome 45 Beta&quot;&gt;Chrome 45 Beta&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2015/07/chrome-45-beta-new-es2015-features.html&quot; title=&quot;Chromium Blog: Chrome 45 Beta: New ES2015 features, service worker improvements, and media controls&quot;&gt;Chromium Blog: Chrome 45 Beta: New ES2015 features, service worker improvements, and media controls&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chrome 45ではArrow Functionや&lt;code&gt;Array.of&lt;/code&gt;や&lt;code&gt;Array.from&lt;/code&gt;、&lt;code&gt;Object.assign&lt;/code&gt;等のES6の実装やService Workerの改善などが行われています。&lt;/p&gt;

&lt;p&gt;またSMILやMediaStreamのlabel属性など古い仕様のものがdeprecatedとなったりしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2015/07/mediastream-deprecations&quot; title=&quot;MediaStream Deprecations — Web Updates&quot;&gt;MediaStream Deprecations — Web Updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://ccoenraets.github.io/es6-tutorial/index.html&quot; title=&quot;ECMAScript 6 Tutorial&quot;&gt;ECMAScript 6 Tutorial&lt;/a&gt;というサイトでは、名前の通りES6をチュートリアルで機能別に学べるように作られています。&lt;/p&gt;

&lt;p&gt;また別の&lt;a href=&quot;http://www.alprosys.com/es6/es6_features_ol.html&quot; title=&quot;ECMAScript 6 Features - ALPROSYS&quot;&gt;ECMAScript 6 Features - ALPROSYS&lt;/a&gt;というスライドでは、ES6の機能毎の紹介やES5ではどのように書けるかなどがまとまっているので見てみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blittle.github.io/chrome-dev-tools/&quot; title=&quot;Introduction | Down and Dirty with Chrome Developer Tools&quot;&gt;Introduction | Down and Dirty with Chrome Developer Tools&lt;/a&gt;というGitBookでできた電子書籍ではChromeの開発者ツールについて書かれています。&lt;/p&gt;

&lt;p&gt;実際にChromeを使って開発者ツールを動かし機能を学べるような作りになっていて、細かい機能についても画像豊富に紹介しているため一度見てみると何か発見があるかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-1.0.0---2015.07.22-·-zloirock/core-js-·-github&quot;&gt;Release 1.0.0 - 2015.07.22 · zloirock/core-js · GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v1.0.0&quot; title=&quot;Release 1.0.0 - 2015.07.22 · zloirock/core-js · GitHub&quot;&gt;github.com/zloirock/core-js/releases/tag/v1.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelにも同梱されてるES5、ES6、ES.nextのpolyfillであるcore-js 1.0.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot; title=&quot;Polyfill · Babel&quot;&gt;Polyfill · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-45-beta:-new-es2015-features,-service-worker-improvements,-and-media-controls&quot;&gt;Chromium Blog: Chrome 45 Beta: New ES2015 features, service worker improvements, and media controls&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2015/07/chrome-45-beta-new-es2015-features.html&quot; title=&quot;Chromium Blog: Chrome 45 Beta: New ES2015 features, service worker improvements, and media controls&quot;&gt;blog.chromium.org/2015/07/chrome-45-beta-new-es2015-features.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 45 Betaリリース。&lt;br&gt;
Arrow FunctionやObject.assignなどのサポート、Subresource Integrityのサポート、SVGアニメーションを行うSMILを非推奨に、Service WorkerからページへpostMessageしたときのメッセージ配送先オブジェクトの変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://googlechrome.github.io/samples/subresource-integrity/index.html&quot; title=&quot;Subresource Integrity Sample&quot;&gt;Subresource Integrity Sample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-typescript-npm-nightlies---typescript---site-home---msdn-blogs&quot;&gt;Introducing TypeScript npm nightlies - TypeScript - Site Home - MSDN Blogs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/typescript/archive/2015/07/27/introducing-typescript-nightlies.aspx&quot; title=&quot;Introducing TypeScript npm nightlies - TypeScript - Site Home - MSDN Blogs&quot;&gt;blogs.msdn.com/b/typescript/archive/2015/07/27/introducing-typescript-nightlies.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのnightly buildが公開された。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g typescript@next&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;でインストールできるようになっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/3875&quot; title=&quot;Create a &amp;#39;publish-nightly&amp;#39; task in our Jakefile by DanielRosenwasser · Pull Request #3875 · Microsoft/TypeScript&quot;&gt;Create a &amp;#39;publish-nightly&amp;#39; task in our Jakefile by DanielRosenwasser · Pull Request #3875 · Microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.9.0-·-airportyh/testem&quot;&gt;Release v0.9.0 · airportyh/testem&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/airportyh/testem/releases/tag/v0.9.0&quot; title=&quot;Release v0.9.0 · airportyh/testem&quot;&gt;github.com/airportyh/testem/releases/tag/v0.9.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Test Runnerツールのtestem 0.9.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bringing-automated-testing-to-microsoft-edge-through-webdriver-|-microsoft-edge-dev-blog&quot;&gt;Bringing automated testing to Microsoft Edge through WebDriver | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.windows.com/msedgedev/2015/07/23/bringing-automated-testing-to-microsoft-edge-through-webdriver/&quot; title=&quot;Bringing automated testing to Microsoft Edge through WebDriver | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2015/07/23/bringing-automated-testing-to-microsoft-edge-through-webdriver/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webdriver&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeがWebDriverをサポート。&lt;br&gt;
MicrosoftWebDriver serverが公開された。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;channikhabra/yarr&quot;&gt;channikhabra/yarr&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/channikhabra/yarr&quot; title=&quot;channikhabra/yarr&quot;&gt;github.com/channikhabra/yarr&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;rss&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;クライアントのみで動くRSSリーダーを題材としたJavaScriptアプリのチュートリアル。&lt;br&gt;
Babel、dexie、jQuery、Rx、virtual-domで作られている。&lt;br&gt;
また、どういう手順で作成するのかというのをGit tagでバージョン毎に見られるようにして、それぞれのバージョン毎に解説が書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jdalton/polyfill-guide&quot;&gt;jdalton/polyfill-guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jdalton/polyfill-guide&quot; title=&quot;jdalton/polyfill-guide&quot;&gt;github.com/jdalton/polyfill-guide&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;polyfillの書き方のガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-plugins-for-react-apps&quot;&gt;Building Plugins for React Apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nylas.com/blog/react-plugins&quot; title=&quot;Building Plugins for React Apps&quot;&gt;nylas.com/blog/react-plugins&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentの独立性を保つにはどうするかという話&lt;br&gt;
Store同士に複雑な依存があると大変なので中央で管理するOmniStoreという概念の導入、Componentがただのデータであることを利用したDIする仕組み、Componentの独立性を確保するパターンについて等&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-6-features---alprosys&quot;&gt;ECMAScript 6 Features - ALPROSYS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.alprosys.com/es6/es6_features_ol.html&quot; title=&quot;ECMAScript 6 Features - ALPROSYS&quot;&gt;www.alprosys.com/es6/es6_features_ol.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;チートシート&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6の新しい構文についてES3、5ではどのように書くことができたのかを比較しながら見られるチートシート的なスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-tech-talk-night-#8-レポート-|-株式会社サイバーエージェント&quot;&gt;Chrome Tech Talk Night #8 レポート | 株式会社サイバーエージェント&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cyberagent.co.jp/techinfo_detail/id=10782&quot; title=&quot;Chrome Tech Talk Night #8 レポート | 株式会社サイバーエージェント&quot;&gt;www.cyberagent.co.jp/techinfo_detail/id=10782&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome Tech Talk Night #8の動画とスライドまとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://connpass.com/event/17312/&quot; title=&quot;Chrome Tech Talk Night #8 - connpass&quot;&gt;Chrome Tech Talk Night #8 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;▶-txjs-2015-livestream---youtube&quot;&gt;▶ TXJS 2015 Livestream - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6lEbk7xdlsQ&quot; title=&quot;▶ TXJS 2015 Livestream - YouTube&quot;&gt;www.youtube.com/watch?v=6lEbk7xdlsQ&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TXJS 2015の動画&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2015.texasjavascript.com/&quot; title=&quot;Texas JavaScript Conference 2015 | TXJS&quot;&gt;Texas JavaScript Conference 2015 | TXJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lostechies.com/chrismissal/2015/07/27/texas-javascript-2015/&quot; title=&quot;Texas JavaScript 2015 | Chris Missal&amp;#39;s Blog&quot;&gt;Texas JavaScript 2015 | Chris Missal&amp;#x27;s Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-6-tutorial&quot;&gt;ECMAScript 6 Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ccoenraets.github.io/es6-tutorial/index.html&quot; title=&quot;ECMAScript 6 Tutorial&quot;&gt;ccoenraets.github.io/es6-tutorial/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6について学ぶチュートリアルサイト。&lt;br&gt;
それぞれの機能毎に学ぶ形式になってる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;schteppe/p2.js&quot;&gt;schteppe/p2.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/schteppe/p2.js&quot; title=&quot;schteppe/p2.js&quot;&gt;github.com/schteppe/p2.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2D物理エンジンライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-engine-for-internet-of-things&quot;&gt;JavaScript engine for Internet of Things&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://samsung.github.io/jerryscript/&quot; title=&quot;JavaScript engine for Internet of Things&quot;&gt;samsung.github.io/jerryscript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;サムスンの組み込み向けJavaScriptエンジン。ファイルサイズが小さめでIoT向け。iotjsというNode.js的なフレームワークも作ってる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JerryScript : V8&lt;/li&gt;
&lt;li&gt;iotjs : Node.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のような関係&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://samsung.github.io/iotjs/&quot; title=&quot;Platform for Internet of Things with JavaScript&quot;&gt;Platform for Internet of Things with JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;s-a/iron-node&quot;&gt;s-a/iron-node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/s-a/iron-node&quot; title=&quot;s-a/iron-node&quot;&gt;github.com/s-a/iron-node&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js向けのJavaScriptデバッガ。&lt;br&gt;
Chrome開発者ツールを使ってNode.jsのコードをデバッグ出来るツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;horsey&quot;&gt;horsey&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://bevacqua.github.io/horsey/&quot; title=&quot;horsey&quot;&gt;bevacqua.github.io/horsey/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;テキスト入力時に候補データからサジェストするUIライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-|-down-and-dirty-with-chrome-developer-tools&quot;&gt;Introduction | Down and Dirty with Chrome Developer Tools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blittle.github.io/chrome-dev-tools/&quot; title=&quot;Introduction | Down and Dirty with Chrome Developer Tools&quot;&gt;blittle.github.io/chrome-dev-tools/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome開発者ツールのそれぞれの機能について解説してる電子書籍。&lt;br&gt;
実際に動かして確認できるサンプルやGIFでの分かりやすい解説をされてる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 28 Jul 2015 23:11:00 +0900</pubDate>
        <link>http://jser.info/2015/07/28/chrome45-es6-devtools/</link>
        <guid isPermaLink="true">http://jser.info/2015/07/28/chrome45-es6-devtools/</guid>
        
        <category>Chrome</category>
        
        <category>ES6</category>
        
        <category>debug</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2015-07-21のJS: TypeScript 1.5、Web Components概要、ブラウザの情報源</title>
        <description>&lt;p&gt;JSer.info #237 -  &lt;a href=&quot;https://github.com/Microsoft/TypeScript/releases/tag/v1.5.3&quot; title=&quot;TypeScript 1.5&quot;&gt;TypeScript 1.5&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/typescript/archive/2015/07/20/announcing-typescript-1-5.aspx&quot; title=&quot;Announcing TypeScript 1.5 - TypeScript - Site Home - MSDN Blogs&quot;&gt;Announcing TypeScript 1.5 - TypeScript - Site Home - MSDN Blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;新しい機能については&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-15&quot; title=&quot;What&amp;#39;s new in TypeScript&quot;&gt;What&amp;#39;s new in TypeScript&lt;/a&gt;でまとめられていますが、ES6周りではmodules、destructuring、spread、for/of、symbols、computed properties、let、constなどがサポートされています。&lt;/p&gt;

&lt;p&gt;またTypeScriptとしては&lt;code&gt;--module umd&lt;/code&gt;や&lt;code&gt;--module system&lt;/code&gt;での出力する種類の追加、&lt;code&gt;--inlineSourceMap&lt;/code&gt;でインラインSourceMapのサポート、&lt;code&gt;--experimentalDecorators&lt;/code&gt;のフラグでDecoratorのサポートなどが追加されています。&lt;/p&gt;

&lt;p&gt;既存の構文やCompiler APIでの破壊的な変更について以下にまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#typescript-15&quot; title=&quot;Breaking Changes · Microsoft/TypeScript Wiki&quot;&gt;Breaking Changes · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/API-Breaking-Changes#typescript-15&quot; title=&quot;API Breaking Changes · Microsoft/TypeScript Wiki&quot;&gt;API Breaking Changes · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/vvakame/items/9b9fde6c71aae6a824c0&quot; title=&quot;TypeScript 1.5.3 変更点 - Qiita&quot;&gt;TypeScript 1.5.3 変更点 - Qiita&lt;/a&gt;という記事にも変更点が詳しく書かれているので一緒に見てみるといいと思います。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.windows.com/msedgedev/2015/07/14/bringing-componentization-to-the-web-an-overview-of-web-components/&quot; title=&quot;Bringing componentization to the web: An overview of Web Components | Microsoft Edge Dev Blog&quot;&gt;Bringing componentization to the web: An overview of Web Components | Microsoft Edge Dev Blog&lt;/a&gt;という記事ではWeb Componentsによって何が変わるのかについて詳しく書かれています。&lt;/p&gt;

&lt;p&gt;Web Componentsがどういう事を解決してくれるのか、既存の類似実装などの歴史、既存の実装では何を解決出来なかったか、今現在のWeb Componentsの状況などについて書かれています。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;http://blogs.windows.com/msedgedev/2015/07/15/microsoft-edge-and-web-components/&quot; title=&quot;Microsoft Edge and Web Components | Microsoft Edge Dev Blog&quot;&gt;Microsoft Edge and Web Components | Microsoft Edge Dev Blog&lt;/a&gt;という記事ではMSEdgeでのWeb Componentsの実装方針について書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;先ほどのMSEdgeの話もそうですが、最近ではブラウザベンダーが色々な情報を発信しています。&lt;/p&gt;

&lt;p&gt;公式の情報だけに絞っても、色々な場所に書かれているのでどこを探せばいいのかは結構難しいです。&lt;/p&gt;

&lt;p&gt;そういった公式の情報源についてを&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource&quot;&gt;azu/browser-javascript-resource&lt;/a&gt;にまとめてみました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/07/21/browser-javascript-resource/&quot; title=&quot;ブラウザ毎のリリースノートや実装状況はどこを見ればいいかをまとめました | Web Scratch&quot;&gt;ブラウザ毎のリリースノートや実装状況はどこを見ればいいかをまとめました | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/slide/jser200/javascript-2014.html&quot;&gt;変化を作ってる人が集まる場所には情報が集まる&lt;/a&gt;ので、ブラウザベンダーが発信してる情報だけ見ても、かなり幅広いことが分かると思います。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-4.5-release&quot;&gt;V8 JavaScript Engine: V8 4.5 release&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2015/07/v8-45-release.html&quot; title=&quot;V8 JavaScript Engine: V8 4.5 release&quot;&gt;v8project.blogspot.com/2015/07/v8-45-release.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 4.5(Chrome 45)リリース。&lt;br&gt;
Arrow Function、Array/TypedArrayのメソッド追加、Object.assign、最適化コンパイラのTurboFan、V8 APIの変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-1.0.0-rc-1-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint 1.0.0-rc-1 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2015/07/eslint-1.0.0-rc-1-released&quot; title=&quot;ESLint 1.0.0-rc-1 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2015/07/eslint-1.0.0-rc-1-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 1.0.0-rc-1リリース。&lt;br&gt;
&lt;code&gt;--reset&lt;/code&gt;がデフォルトになり、ES6の対応改善、新しいルールの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/1.0.0/user-guide/migrating-to-1.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Documentation - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-1.5---typescript---site-home---msdn-blogs&quot;&gt;Announcing TypeScript 1.5 - TypeScript - Site Home - MSDN Blogs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/typescript/archive/2015/07/20/announcing-typescript-1-5.aspx&quot; title=&quot;Announcing TypeScript 1.5 - TypeScript - Site Home - MSDN Blogs&quot;&gt;blogs.msdn.com/b/typescript/archive/2015/07/20/announcing-typescript-1-5.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 1.5リリース。&lt;br&gt;
modulesやdestructuring等ES6の対応改善、tsconfig.jsonによるプロジェクト設定、Decoratorを&lt;code&gt;--experimentalDecorators&lt;/code&gt;フラグで試験的サポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap#15&quot; title=&quot;Roadmap · Microsoft/TypeScript Wiki&quot;&gt;Roadmap · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/vvakame/items/9b9fde6c71aae6a824c0&quot; title=&quot;TypeScript 1.5.3 変更点 - Qiita&quot;&gt;TypeScript 1.5.3 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-browserify/changelog.markdown-at-master-·-substack/node-browserify&quot;&gt;node-browserify/changelog.markdown at master · substack/node-browserify&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/blob/master/changelog.markdown#1100&quot; title=&quot;node-browserify/changelog.markdown at master · substack/node-browserify&quot;&gt;github.com/substack/node-browserify/blob/master/changelog.markdown#1100&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserify 11.0.0リリース。&lt;br&gt;
ブラウザ向けの&lt;code&gt;stream&lt;/code&gt;として使うreadable-streamをアップデートしStreams3ベースに変更。&lt;br&gt;
ブラウザ向け&lt;code&gt;http&lt;/code&gt;モジュールをFetch APIをベースとしたstream-httpへ変更しstreamをサポートできるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/readable-stream&quot; title=&quot;nodejs/readable-stream&quot;&gt;nodejs/readable-stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jhiesey/stream-http&quot; title=&quot;jhiesey/stream-http&quot;&gt;jhiesey/stream-http&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bringing-componentization-to-the-web:-an-overview-of-web-components-|-microsoft-edge-dev-blog&quot;&gt;Bringing componentization to the web: An overview of Web Components | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.windows.com/msedgedev/2015/07/14/bringing-componentization-to-the-web-an-overview-of-web-components/&quot; title=&quot;Bringing componentization to the web: An overview of Web Components | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2015/07/14/bringing-componentization-to-the-web-an-overview-of-web-components/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsについての詳しい解説。&lt;br&gt;
何を目的にしているか、関連するコンポーネント実装の歴史。&lt;br&gt;
CSSスタイルのisolation、スタイルのスコープ、Global object isolation、iframeには欠けている部分についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;socket.io-—-socket.io-p2p&quot;&gt;Socket.IO — Socket.IO P2P&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://socket.io/blog/socket.io-p2p/#&quot; title=&quot;Socket.IO — Socket.IO P2P&quot;&gt;socket.io/blog/socket.io-p2p/#&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;p2p&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Socket.IOからWebRTCを利用してP2Pでの通信を行えるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;comprehensive-beginner&amp;#x27;s-guide-to-reactjs---antjanus&quot;&gt;Comprehensive Beginner&amp;#x27;s Guide To ReactJS - AntJanus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://antjanus.com/blog/web-development-tutorials/front-end-development/comprehensive-beginners-guide-to-reactjs/&quot; title=&quot;Comprehensive Beginner&amp;#39;s Guide To ReactJS - AntJanus&quot;&gt;antjanus.com/blog/web-development-tutorials/front-end-development/comprehensive-beginners-guide-to-reactjs/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJSユーザ向けのReact入門ガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-debug-javascript-remotely-with-vorlon.js---tuts+-code-tutorial&quot;&gt;How to Debug JavaScript Remotely With Vorlon.js - Tuts+ Code Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://code.tutsplus.com/tutorials/how-to-debug-javascript-remotely-with-vorlonjs--cms-24343&quot; title=&quot;How to Debug JavaScript Remotely With Vorlon.js - Tuts+ Code Tutorial&quot;&gt;code.tutsplus.com/tutorials/how-to-debug-javascript-remotely-with-vorlonjs--cms-24343&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vorlon.jsを使ったJavaScriptのリモートデバッグについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-in-depth:-proxies-✩-mozilla-hacks-–-the-web-developer-blog&quot;&gt;ES6 In Depth: Proxies ✩ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/07/es6-in-depth-proxies-and-reflect/&quot; title=&quot;ES6 In Depth: Proxies ✩ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2015/07/es6-in-depth-proxies-and-reflect/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Proxy APIについての解説。&lt;br&gt;
Proxyで扱える14コのhandler、Proxyの使いどころ、Revocable proxiesについてなど。&lt;br&gt;
&amp;quot;オブジェクトはプロパティのコレクションである&amp;quot;といえるかどうかの話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;strongloop-|-an-introduction-to-javascript-es6-iterators&quot;&gt;StrongLoop | An Introduction to JavaScript ES6 Iterators&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://strongloop.com/strongblog/introduction-to-es6-iterators/&quot; title=&quot;StrongLoop | An Introduction to JavaScript ES6 Iterators&quot;&gt;strongloop.com/strongblog/introduction-to-es6-iterators/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6 Iteratorについての解説。&lt;br&gt;
for-ofとfor-inの違い、Symbol.iteratorを使って定義する方法とそれを利用する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azu/browser-javascript-resource&quot;&gt;azu/browser-javascript-resource&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource&quot;&gt;github.com/azu/browser-javascript-resource&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;blog&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;IEやFirefoxなどブラウザごとのリリースノートや更新履歴、実装状況、バグレポートの方法などをまとめたもの&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/07/21/browser-javascript-resource/&quot; title=&quot;ブラウザ毎のリリースノートや実装状況はどこを見ればいいかをまとめました | Web Scratch&quot;&gt;ブラウザ毎のリリースノートや実装状況はどこを見ればいいかをまとめました | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;知らないと損するsassの組み込み関数徹底解剖-|-yuhiisk&quot;&gt;知らないと損するSassの組み込み関数徹底解剖 | Yuhiisk&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.yuhiisk.com/archive/2015/07/14/sass-built-in-functions.html&quot; title=&quot;知らないと損するSassの組み込み関数徹底解剖 | Yuhiisk&quot;&gt;blog.yuhiisk.com/archive/2015/07/14/sass-built-in-functions.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Sass&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファレンス&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Sassの関数まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flux-in-depth.-store-and-network-communication.-–-minko-gechev&amp;#x27;s-blog&quot;&gt;Flux in Depth. Store and Network Communication. – Minko Gechev&amp;#x27;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.mgechev.com/2015/07/18/flux-in-depth-store-network-communication-services&quot; title=&quot;Flux in Depth. Store and Network Communication. – Minko Gechev&amp;#39;s blog&quot;&gt;blog.mgechev.com/2015/07/18/flux-in-depth-store-network-communication-services&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fluxからネットワークを含めたデータフローについて。&lt;br&gt;
Store -&amp;gt; View、View -&amp;gt; Storeまでの流れ、モデルとStateの分離。&lt;br&gt;
Network -&amp;gt; UI、UI -&amp;gt; Networkのパターンについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-introduction-to-browser-rendering---youtube&quot;&gt;An Introduction to Browser Rendering - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=n1cKlKM3jYI&quot; title=&quot;An Introduction to Browser Rendering - YouTube&quot;&gt;www.youtube.com/watch?v=n1cKlKM3jYI&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのレンダリングフローについてのスクリーンキャスト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nikgraf/belle&quot;&gt;nikgraf/belle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nikgraf/belle/&quot; title=&quot;nikgraf/belle&quot;&gt;github.com/nikgraf/belle/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentとして使えるUI集。&lt;br&gt;
外からJSを経由してコンポーネントに対してスタイルを設定出来るようになっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ipselon/react-ui-builder&quot;&gt;ipselon/react-ui-builder&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ipselon/react-ui-builder&quot; title=&quot;ipselon/react-ui-builder&quot;&gt;github.com/ipselon/react-ui-builder&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React ComponentをGUIで配置したり、配置したものからReactのコードを吐き出したりして、GUIでコードを編集、プレビューなど出来るツール。&lt;br&gt;
ツール自体がReactとProxyからできていて面白い&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;drboolean/mostly-adequate-guide&quot;&gt;DrBoolean/mostly-adequate-guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DrBoolean/mostly-adequate-guide&quot; title=&quot;DrBoolean/mostly-adequate-guide&quot;&gt;github.com/DrBoolean/mostly-adequate-guide&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでの関数型プログラミングについての無料の書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-regular-expressions---o&amp;#x27;reilly-media&quot;&gt;JavaScript Regular Expressions - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9781783282258.do&quot; title=&quot;JavaScript Regular Expressions - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9781783282258.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;正規表現&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの正規表現についての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 21 Jul 2015 22:54:00 +0900</pubDate>
        <link>http://jser.info/2015/07/21/typescript1.5-webcomponents-browser/</link>
        <guid isPermaLink="true">http://jser.info/2015/07/21/typescript1.5-webcomponents-browser/</guid>
        
        <category>TypeScript</category>
        
        <category>WebCompoents</category>
        
        <category>Browser</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2015-07-14のJS: jQuery 3.0αリリース、JSHintとES.next</title>
        <description>&lt;p&gt;JSer.info #236 - jQuery 3.0αがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jquery.com/2015/07/13/jquery-3-0-and-jquery-compat-3-0-alpha-versions-released/&quot; title=&quot;jQuery 3.0 and jQuery Compat 3.0 Alpha Versions Released | Official jQuery Blog&quot;&gt;jQuery 3.0 and jQuery Compat 3.0 Alpha Versions Released | Official jQuery Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだα版ですが、&lt;code&gt;.show()&lt;/code&gt;と&lt;code&gt;.hide()&lt;/code&gt;の仕組みの変更、jQuery.DeferredがPromise/A+互換になり、2.xでdeprecatedとなっていたメソッドの削除などが行われています。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;http://blog.jquery.com/2011/09/01/jquery-1-6-3-released/&quot;&gt;以前断念したrequestAnimationFrameによるアニメーション&lt;/a&gt;がjQuery 3.0では有効化されています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.show()&lt;/code&gt;と&lt;code&gt;.hide()&lt;/code&gt;については以前の挙動に依存したものが多そうなので、α版でどうなるかを試してフィードバックをしてみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://jshint.com/blog/new-lang-features/&quot; title=&quot;A Formal Commitment to New Language Features&quot;&gt;A Formal Commitment to New Language Features&lt;/a&gt;という記事はJavaScriptのLintツールである&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt;の今後の方針について書かれています。&lt;/p&gt;

&lt;p&gt;ES6+のコードを変換するツールである&lt;a href=&quot;http://babeljs.io/&quot;&gt;Babel&lt;/a&gt;では、次期ECMAScriptに提案されているプロポーサルの実装も&lt;a href=&quot;http://babeljs.io/blog/2015/03/31/5.0.0/&quot;&gt;Stageオプション&lt;/a&gt;で有効化出来るようになっています。&lt;/p&gt;

&lt;p&gt;このStageオプションで使える構文などは、新しすぎるためJSHintなどのツールで解釈するためには、まずコードをパースできないといけません。&lt;/p&gt;

&lt;p&gt;JSHintは著名なパーサライブラリである&lt;a href=&quot;http://esprima.org/&quot;&gt;esprima&lt;/a&gt;や&lt;a href=&quot;https://github.com/marijnh/acorn&quot;&gt;acorn&lt;/a&gt;とは別で、内部的にパーサを持っているので新しい構文に対応するコストが大きいです。&lt;/p&gt;

&lt;p&gt;また&lt;a href=&quot;https://gist.github.com/azu/460803cf1a95d90a47ed#stage-1-proposal&quot; title=&quot;Stage 1: Proposal&quot;&gt;Stage 1: Proposal&lt;/a&gt;であるような機能はまだ不安定であるためツールとしてサポートしてしまうと今後問題となる可能性があることなどを理由に、JSHintでは&lt;a href=&quot;https://gist.github.com/azu/460803cf1a95d90a47ed#stage-2-draft&quot; title=&quot;Stage 2: Draft&quot;&gt;Stage 2: Draft&lt;/a&gt;以降の機能については&lt;code&gt;experimental&lt;/code&gt;としてサポートするが、それ未満のものはサポートしない方針などについて書かれています。&lt;/p&gt;

&lt;p&gt;もう少し詳しくは&lt;a href=&quot;http://jser.info/2015/07/11/jshint-new-lang-features/&quot; title=&quot;JSHint: A Formal Commitment to New Language Features - JSer.info&quot;&gt;この話の詳細を別記事&lt;/a&gt;で書いたので、こちらも合わせてみてみるといいかもしれません。&lt;/p&gt;

&lt;p&gt;この話で面白いのはJSHintのようなツールもECMAScriptの策定プロセスを意識したような作りになっていくという流れが出てきている気がします。&lt;/p&gt;

&lt;p&gt;今後ECMAScriptの策定プロセスやStageみたいな話は、色々出てきそうなのでそれについて上手くまとめたいのでいいアイデアを募集しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/azu/issues/57&quot; title=&quot;ES nextの策定プロセスを分かりやすくまとめた記事 · Issue #57 · azu/azu&quot;&gt;ES nextの策定プロセスを分かりやすくまとめた記事 · Issue #57 · azu/azu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ロシア語ですが、&lt;a href=&quot;http://slides.com/chicoxyzzy/deck-1#/&quot;&gt;この講演&lt;/a&gt;は策定のプロセスをストーリー的に紹介して面白いです。&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/5HNrQJsv4gU?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3.0-and-jquery-compat-3.0-alpha-versions-released-|-official-jquery-blog&quot;&gt;jQuery 3.0 and jQuery Compat 3.0 Alpha Versions Released | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2015/07/13/jquery-3-0-and-jquery-compat-3-0-alpha-versions-released/&quot; title=&quot;jQuery 3.0 and jQuery Compat 3.0 Alpha Versions Released | Official jQuery Blog&quot;&gt;blog.jquery.com/2015/07/13/jquery-3-0-and-jquery-compat-3-0-alpha-versions-released/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3.0αとjQuery Compat 3.0αリリース。&lt;br&gt;
&lt;code&gt;.show()&lt;/code&gt;と&lt;code&gt;.hide()&lt;/code&gt;のパフォーマンス改善、jQuery.DeferredがPromise/A+互換に、非推奨だったjqXHR.success | error | complete、イベントの&lt;code&gt;.load&lt;/code&gt;/&lt;code&gt;.unload&lt;/code&gt;/&lt;code&gt;.error&lt;/code&gt;を削除。&lt;br&gt;
undocumentなメソッドを外から触れないように変更。&lt;br&gt;
アニメーションで再度requestAnimationFrameを使うように、カスタムセレクタの改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/issues?q=is%3Aissue+milestone%3A3.0.0&quot; title=&quot;Issues · jquery/jquery&quot;&gt;Issues · jquery/jquery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-incremental-dom-—-google-developers-—-medium&quot;&gt;Introducing Incremental DOM — Google Developers — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/google-developers/introducing-incremental-dom-e98f79ce2c5f&quot; title=&quot;Introducing Incremental DOM — Google Developers — Medium&quot;&gt;medium.com/google-developers/introducing-incremental-dom-e98f79ce2c5f&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;メモリ使用量とテンプレートエンジンでは扱える閉じタグの無い要素などがモチベーションとなってるGoogle製のDOMライブラリ(WIP)。&lt;br&gt;
Diff計算のためにVirtual DOMのような全体のTree構造をメモリに保持しない事で、余計なオブジェクトを作らないようにして、1 passで走査することでメモリ効率を上げている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/azu/8f1afa948eeb2da3ad00&quot; title=&quot;Incremental DOM ざっと見たやつ&quot;&gt;Incremental DOM ざっと見たやつ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;canvas---jsでinstagramの画像フィルターを作るまで---qiita&quot;&gt;canvas - JSでInstagramの画像フィルターを作るまで - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/KENJU/items/78c0034d7e93fbe8f95a&quot; title=&quot;canvas - JSでInstagramの画像フィルターを作るまで - Qiita&quot;&gt;qiita.com/KENJU/items/78c0034d7e93fbe8f95a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Instagram的な画像フィルターをCanvasで行う方法、また処理が重たい問題をWeb Worker内で行うことについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer-edition-41:-view-source-in-a-tab,-screenshot-elements,-har-files,-and-more-✩-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Developer Edition 41: View source in a tab, screenshot elements, HAR files, and more ✩ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/07/developer-edition-41-view-source-in-a-tab-screenshot-elements-har-files-and-more/&quot; title=&quot;Developer Edition 41: View source in a tab, screenshot elements, HAR files, and more ✩ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2015/07/developer-edition-41-view-source-in-a-tab-screenshot-elements-har-files-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 41の開発者ツールで改善された箇所について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/07/developer-edition-41-view-source-in-a-tab-screenshot-elements-har-files-and-more/&quot; title=&quot;Developer Edition 41: View source in a tab, screenshot elements, HAR files, and more ✩ Mozilla Hacks – the Web developer blog&quot;&gt;Developer Edition 41: View source in a tab, screenshot elements, HAR files, and more ✩ Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-fast-are-web-workers?-✩-mozilla-hacks-–-the-web-developer-blog&quot;&gt;How fast are web workers? ✩ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/07/how-fast-are-web-workers/&quot; title=&quot;How fast are web workers? ✩ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2015/07/how-fast-are-web-workers/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebWorkerやSharedWorkerの起動コスト、メッセージの転送速度について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-d3.js-design-pattern-—-medium&quot;&gt;a d3.js design pattern — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@billautomata/a-d3-js-design-pattern-16a6503dc86f&quot; title=&quot;a d3.js design pattern — Medium&quot;&gt;medium.com/@billautomata/a-d3-js-design-pattern-16a6503dc86f&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;デザインパターン&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;D3.jsを使って書く際のデザインパターンについての連載&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/billautomata/d3js_design_patterns&quot; title=&quot;billautomata/d3js_design_patterns&quot;&gt;billautomata/d3js_design_patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-formal-commitment-to-new-language-features&quot;&gt;A Formal Commitment to New Language Features&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jshint.com/blog/new-lang-features/&quot; title=&quot;A Formal Commitment to New Language Features&quot;&gt;jshint.com/blog/new-lang-features/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;BabelなどによってES.nextの機能を試せるようになったが、JSHintがそれらの新しすぎる構文をサポートするのが難しい理由について。&lt;/p&gt;

&lt;p&gt;詳しくは&lt;a href=&quot;http://jser.info/2015/07/11/jshint-new-lang-features/&quot; title=&quot;JSHint: A Formal Commitment to New Language Features - JSer.info&quot;&gt;JSHint: A Formal Commitment to New Language Features - JSer.info&lt;/a&gt;に書きました。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;you-might-not-need-underscore-|-reindex&quot;&gt;You Might Not Need Underscore | Reindex&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reindex.io/blog/you-might-not-need-underscore/&quot; title=&quot;You Might Not Need Underscore | Reindex&quot;&gt;www.reindex.io/blog/you-might-not-need-underscore/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Underscore.jsのメソッドと同様の事をES5、ES6でどのように書くことができるかについての比較まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-on-es6+-·-babel&quot;&gt;React on ES6+ · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2015/06/07/react-on-es6-plus&quot; title=&quot;React on ES6+ · Babel&quot;&gt;babeljs.io/blog/2015/06/07/react-on-es6-plus&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを題材にしたES6やES.nextについての機能紹介。&lt;br&gt;
具体的にES5で書いたものがどう変わるかをReactを例にして解説してる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-promise-anti-patterns-and-best-practices&quot;&gt;ES6 Promise Anti-Patterns and Best Practices&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.datchley.name/promise-patterns-anti-patterns/&quot; title=&quot;ES6 Promise Anti-Patterns and Best Practices&quot;&gt;www.datchley.name/promise-patterns-anti-patterns/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseのアンチパターン集&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-async-control-flow&quot;&gt;Javascript Async Control Flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://kaye.us/javascript-async-control-flow/&quot; title=&quot;Javascript Async Control Flow&quot;&gt;kaye.us/javascript-async-control-flow/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES.nextのasync/awaitについて。&lt;br&gt;
またこれと似た事はtask.jsやcoを使うことで今すぐできるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ui-testing-with-react-components-|-toptal&quot;&gt;UI Testing with React Components | Toptal&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.toptal.com/react/how-react-components-make-ui-testing-easy&quot; title=&quot;UI Testing with React Components | Toptal&quot;&gt;www.toptal.com/react/how-react-components-make-ui-testing-easy&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentのテスト方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-javascript-modules-with-tape&quot;&gt;Testing JavaScript Modules with Tape&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ponyfoo.com/articles/testing-javascript-modules-with-tape&quot; title=&quot;Testing JavaScript Modules with Tape&quot;&gt;ponyfoo.com/articles/testing-javascript-modules-with-tape&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;tape、proxyquire、Sinon.JSを使ったテストについて。&lt;br&gt;
tapeによるテストの書き方、proxyquireとSinon.JSを使ったモックについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;▶-&amp;quot;Процесс-стандартизации-ecmascript&amp;quot;,-Сергей-Рубанов,-moscowjs-23---youtube&quot;&gt;▶ &amp;quot;Процесс стандартизации ECMAScript&amp;quot;, Сергей Рубанов, MoscowJS 23 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5HNrQJsv4gU&quot; title=&quot;▶ \&amp;quot;Процесс стандартизации ECMAScript\&amp;quot;, Сергей Рубанов, MoscowJS 23 - YouTube&quot;&gt;www.youtube.com/watch?v=5HNrQJsv4gU&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptを策定するTC39のプロセスについての動画とスライド。&lt;br&gt;
≈≈≈ という仮の新しい構文を例としてどういうプロセスで策定されるかについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://slides.com/chicoxyzzy/deck-1#/&quot; title=&quot;ES process by Sergey Rubanov&quot;&gt;ES process by Sergey Rubanov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine&quot;&gt;V8 JavaScript Engine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/&quot; title=&quot;V8 JavaScript Engine&quot;&gt;v8project.blogspot.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;blog&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8についてより詳細な情報を載せていく公式ブログ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webglstudio.js&quot;&gt;WebGLStudio.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://webglstudio.org/&quot; title=&quot;WebGLStudio.js&quot;&gt;webglstudio.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebGLエディタ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jam3/math-as-code&quot;&gt;Jam3/math-as-code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Jam3/math-as-code&quot; title=&quot;Jam3/math-as-code&quot;&gt;github.com/Jam3/math-as-code&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;チートシート&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;色々な数学記号や数式をJavaScriptで表現するチートシート&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rreverser/babel-plugin-asm-js&quot;&gt;RReverser/babel-plugin-asm-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/RReverser/babel-plugin-asm-js&quot; title=&quot;RReverser/babel-plugin-asm-js&quot;&gt;github.com/RReverser/babel-plugin-asm-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;asm.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;asm.jsにコンパイルするBabel plugin&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ijzerenhein/autolayout.js&quot;&gt;IjzerenHein/autolayout.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/IjzerenHein/autolayout.js&quot; title=&quot;IjzerenHein/autolayout.js&quot;&gt;github.com/IjzerenHein/autolayout.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ios&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;iOSのAutoLayoutとVisual Format Language的な実装を持つJavaScriptライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;high-performance-mobile-web---o&amp;#x27;reilly-media&quot;&gt;High Performance Mobile Web - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920035060.do&quot; title=&quot;High Performance Mobile Web - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920035060.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2015年7月発売&lt;br&gt;
モバイルウェブサイトにおけるパフォーマンスについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 14 Jul 2015 22:40:00 +0900</pubDate>
        <link>http://jser.info/2015/07/14/jquery3.0-jshint-esnext/</link>
        <guid isPermaLink="true">http://jser.info/2015/07/14/jquery3.0-jshint-esnext/</guid>
        
        <category>jQuery</category>
        
        <category>ECMAScript</category>
        
        <category>JSHint</category>
        
        <category>Lint</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>JSHint: A Formal Commitment to New Language Features</title>
        <description>&lt;h2 id=&quot;a-formal-commitment-to-new-language-features&quot;&gt;&lt;a href=&quot;http://jshint.com/blog/new-lang-features/&quot; title=&quot;A Formal Commitment to New Language Features&quot;&gt;A Formal Commitment to New Language Features&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jshint.com/&quot; title=&quot;JSHint, a JavaScript Code Quality Tool&quot;&gt;JSHint&lt;/a&gt;のブログに投稿された&lt;a href=&quot;http://jshint.com/blog/new-lang-features/&quot; title=&quot;A Formal Commitment to New Language Features&quot;&gt;A Formal Commitment to New Language Features&lt;/a&gt;という記事の紹介です。&lt;/p&gt;

&lt;p&gt;BabelなどによってES.nextの機能を試せるようになっていますが、&lt;br&gt;
JSHintがそれらの新しすぎる構文をサポートするのが難しい理由について。&lt;/p&gt;

&lt;p&gt;理由の一つとしてメンテナンスが難しすぎるという問題があること。&lt;/p&gt;

&lt;p&gt;もう一つの大きな理由としては、JSHintは常にコミュニティ駆動型のツールであるため、&lt;br&gt;
エコシステムを破壊するかもしれないまだ不安定なものをファーストクラスとしては採用しない事が挙げられています。&lt;/p&gt;

&lt;p&gt;JSHintがJSLintをforkして作られた経緯については、以下に作者のブログで書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@valueof/why-i-forked-jslint-to-jshint-73a72fd3612&quot; title=&quot;Why I forked JSLint to JSHint — Medium&quot;&gt;Why I forked JSLint to JSHint — Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.node.ws/?p=1379&quot; title=&quot;JSLint から JSHint をフォークした理由(翻訳) | 黒くないすべてのものはカラスではない&quot;&gt;JSLint から JSHint をフォークした理由(翻訳) | 黒くないすべてのものはカラスではない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES.nextを一概に取り入れないという意味ではなく、その機能のプロポーサルがStage 2以上のものは、全く早すぎるというわけではないためexperimentalフラグで取り入れていくとしています。&lt;/p&gt;

&lt;p&gt;Note: Stage 2はECMAScriptのプロポーサルの段階を示すもので、&lt;br&gt;
プロポーサルのドラフトができてブラウザがフラグ付きで実験的なサポートをしたりする段階です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1QbEE0BsO4lvl7NFTn5WXWeiEIBfaVUF7Dk0hpPpPDzU/edit?pli=1&quot; title=&quot;TC39 Process - Google ドキュメント&quot;&gt;TC39 Process - Google ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSHint 3ではこの方針に則り&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;esnext&lt;/code&gt;というオプションは廃止&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moz&lt;/code&gt;オプションについてはそのまま&lt;/li&gt;
&lt;li&gt;ES6については&lt;code&gt;esversion: 6&lt;/code&gt;オプションでサポート&lt;/li&gt;
&lt;li&gt;ES7についてはちゃんと標準化が完了してからサポート&lt;/li&gt;
&lt;li&gt;Stage 2以上のプロポーサルについては&lt;code&gt;experimental&lt;/code&gt;オプションでサポート&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という形にしていくようです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JSHintの競合として&lt;a href=&quot;https://github.com/eslint/eslint&quot; title=&quot;ESLint&quot;&gt;ESLint&lt;/a&gt;やそれを利用して&lt;a href=&quot;http://babeljs.io/blog/2015/03/31/5.0.0/&quot; title=&quot;5.0.0 Released · Babel&quot;&gt;BabelがサポートするStage nのプロポーサル&lt;/a&gt;もLintできる&lt;a href=&quot;https://github.com/babel/babel-eslint&quot; title=&quot;babel-eslint&quot;&gt;babel-eslint&lt;/a&gt;があります。&lt;/p&gt;

&lt;p&gt;ESLintは柔軟なサポートをするためにプラグインシステムを導入していますが、&lt;br&gt;
プラグインにはプラグインなりの難しさがあり今回の件が発端で議論されてます。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/mjackson&quot;&gt;@mjackson&lt;/a&gt; FWIW (roughly) over 1/3 of ESLint users use babel-eslint. In the future ESLint won&amp;#39;t even be required as it&amp;#39;ll be rolled into core&lt;/p&gt;&amp;mdash; Sebastian McKenzie (@sebmck) &lt;a href=&quot;https://twitter.com/sebmck/status/619607489252880384&quot;&gt;July 10, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;ESLintと役割が微妙に競合でもある&lt;a href=&quot;https://github.com/jscs-dev/node-jscs&quot; title=&quot;JSCS&quot;&gt;JSCS&lt;/a&gt;の&lt;a href=&quot;https://twitter.com/mikesherov&quot; title=&quot;@mikesherov&quot;&gt;@mikesherov&lt;/a&gt;さんが言うように、&lt;br&gt;
競合がいることは健全であるため、これからもLintツールにおいても互いの方針によって発展していくのは正しいと思います。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/mikesherov&quot;&gt;@mikesherov&lt;/a&gt; &lt;a href=&quot;https://twitter.com/sebmck&quot;&gt;@sebmck&lt;/a&gt; having 2 impls is fine. Better than monoculture. It&amp;#39;s when 20 show up that sucks. Why I love Acorn AND Esprima.&lt;/p&gt;&amp;mdash; Mike Sherov (@mikesherov) &lt;a href=&quot;https://twitter.com/mikesherov/status/619694583476322304&quot;&gt;July 11, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
</description>
        <pubDate>Sat, 11 Jul 2015 14:53:00 +0900</pubDate>
        <link>http://jser.info/2015/07/11/jshint-new-lang-features/</link>
        <guid isPermaLink="true">http://jser.info/2015/07/11/jshint-new-lang-features/</guid>
        
        <category>JSHint</category>
        
        <category>ECMAScript</category>
        
        <category>ES.next</category>
        
        <category>community</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>2015-07-06のJS: React v0.14 Beta 1、Firefox 39、ES6アンケート結果</title>
        <description>&lt;p&gt;JSer.info #235 - &lt;a href=&quot;https://facebook.github.io/react/blog/2015/07/03/react-v0.14-beta-1.html&quot; title=&quot;React v0.14 Beta 1&quot;&gt;React v0.14 Beta 1&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;大きな変更として、&lt;code&gt;react&lt;/code&gt;と&lt;code&gt;react-dom&lt;/code&gt;の2つがパッケージに分けられています。&lt;/p&gt;

&lt;p&gt;今まで&lt;code&gt;react&lt;/code&gt;モジュールにあったAPIがそれぞれ以下のように移されています。&lt;br&gt;
 (移されたAPIは&lt;code&gt;react&lt;/code&gt;モジュールから触るのがdeprecatedとなってます)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;react-dom

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ReactDOM.render&lt;/code&gt;、&lt;code&gt;ReactDOM.unmountComponentAtNode&lt;/code&gt;、&lt;code&gt;ReactDOM.findDOMNode&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;react-dom/server

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ReactDOMServer.renderToString&lt;/code&gt;、&lt;code&gt;ReactDOMServer.renderToStaticMarkup&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらの移行したAPIやES6 Classes対応などは&lt;a href=&quot;https://www.npmjs.com/package/react-codemod&quot; title=&quot;react-codemod&quot;&gt;react-codemod&lt;/a&gt;という移行用のツールで変換できるようになるようです。&lt;/p&gt;

&lt;p&gt;まだβ段階なのでおかしな部分もありますが、Reactを使ってる人は見ておくといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/39.0/releasenotes/&quot; title=&quot;Firefox&quot;&gt;Firefox 39&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;Fetch APIなどがデフォルトで有効となり&lt;code&gt;window.fetch&lt;/code&gt;という形で参照出来るようになっています。&lt;br&gt;
また&lt;a href=&quot;http://blog.gospodarets.com/css-scroll-snap/&quot; title=&quot;CSS Scroll Snap Points&quot;&gt;CSS Scroll Snap Points&lt;/a&gt;のサポートや、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot; title=&quot;String.prototype.replace()&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;の第三引数などFirefox独自の仕様をdeprecatedとしてES6仕様への準拠などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;先週、&lt;a href=&quot;http://jser.info/2015/06/30/ember-data-survey/&quot; title=&quot;2015-06-30のJS&quot;&gt;2015-06-30のJS&lt;/a&gt;で行ったJavaScriptアンケートの結果は以下のページから見ることが出来ます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://azu.typeform.com/report/AGW5qu/T5WV&quot; title=&quot;総合レポート - ES6とJSer.infoについて&quot;&gt;総合レポート - ES6とJSer.infoについて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;quot;ES6でコードを書いたことがありますか?&amp;quot;という質問に対して&lt;strong&gt;74%&lt;/strong&gt;の人が何らかの形でES6を書いたことがあるようでした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://monosnap.com/image/xvcrecVValrE4kIhOYHJw2KbeKLlMd.png&quot; alt=&quot;ES6 code&quot;&gt;&lt;/p&gt;

&lt;p&gt;プロダクトとかライブラリをES6で書いたことがあるかという質問になると一気に減りそうな気がしますが、&lt;a href=&quot;http://babeljs.io/&quot; title=&quot;Babel&quot;&gt;Babel&lt;/a&gt;などの変換ツールが気軽に使える様になったのが結構大きそうな気がします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/slide/nodejs-es6/how-to-learn.html&quot; title=&quot;どうやってECMAScript 6を学び始めるか&quot;&gt;どうやってECMAScript 6を学び始めるか&lt;/a&gt;というスライドでも簡単にまとめていますが、BabelのようなTranspilerの挙動を頼りにES6を学ぶのは危険な部分もあります。&lt;/p&gt;

&lt;p&gt;もう少しするとブラウザにも普通の開発で書くようなES6の機能は大体実装されるので(module以外...)、学ぶのはネイティブで、使うのはTranspiler経由というような使い分けができるようになると、もっとES6が身近になると思います。&lt;/p&gt;

&lt;p&gt;&amp;quot;ES6でもっと知りたい機能は?&amp;quot;という質問では、若干意外でしたがGenerator/Iterator、Modules、Reflect、Proxy、Classというような順になっています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://monosnap.com/image/xKUF33Iv9d6KiqKNxW9LMmvlK0ukZZ.png&quot; alt=&quot;feature&quot;&gt;&lt;/p&gt;

&lt;p&gt;メタプログラミング的な要素が結構上に来るのがやや意外でした。&lt;/p&gt;

&lt;p&gt;&amp;quot;JSer.infoでもっと未来の話を扱ったほうが良い?&amp;quot;や&amp;quot;JSer.infoでもっとコアな話を扱ったほうが良い?&amp;quot;という質問では80%弱ぐらいはYESでしたが、まあひっそりと混ぜていきます。&lt;/p&gt;

&lt;p&gt;意見では&amp;quot;podcastをやって欲しい&amp;quot;とかありました。最近、HTML5 VideoやAudioの字幕などを扱う&lt;a href=&quot;http://www.html5rocks.com/ja/tutorials/track/basics/&quot; title=&quot;track 要素&quot;&gt;track要素&lt;/a&gt;を使って遊んでいて、結構色々な使い方が出来そうで面白い。podcastについては頑張ってください。&lt;/p&gt;

&lt;p&gt;細かい意見とか要望は&lt;a href=&quot;https://twitter.com/search?q=%23jserinfo&amp;amp;src=typd&quot; title=&quot;#jserinfo&quot;&gt;#jserinfo&lt;/a&gt;のハッシュタグへ書いておくと良い気がします。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v0.14-beta-1-|-react&quot;&gt;React v0.14 Beta 1 | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2015/07/03/react-v0.14-beta-1.html&quot; title=&quot;React v0.14 Beta 1 | React&quot;&gt;facebook.github.io/react/blog/2015/07/03/react-v0.14-beta-1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React v0.14 Beta 1リリース。&lt;br&gt;
reactとreact-domにパッケージが分かれた。refsがDOM nodeそのものを指すようになるなど。&lt;br&gt;
また移行用の変換ツールとしてreact-codemodが公開された&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/react-codemod&quot; title=&quot;react-codemod&quot;&gt;react-codemod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-—-notes-(39.0)-—-mozilla&quot;&gt;Firefox — Notes (39.0) — Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/39.0/releasenotes/&quot; title=&quot;Firefox — Notes (39.0) — Mozilla&quot;&gt;www.mozilla.org/en-US/firefox/39.0/releasenotes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 39リリース。&lt;br&gt;
Fetch APIがデフォルトで有効に、CSS Scroll Snap Pointsのサポート、ES6仕様への準拠など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/39/Site_Compatibility&quot; title=&quot;Firefox 39 サイト互換性情報 - Mozilla | MDN&quot;&gt;Firefox 39 サイト互換性情報 - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/39&quot; title=&quot;Firefox 39 for developers - Mozilla | MDN&quot;&gt;Firefox 39 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/New_in_JavaScript/Firefox_JavaScript_changelog#Firefox_39&quot; title=&quot;Firefox JavaScript changelog - JavaScript | MDN&quot;&gt;Firefox JavaScript changelog - JavaScript | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.gospodarets.com/css-scroll-snap/&quot; title=&quot;Native CSS Scroll Snap Points&quot;&gt;Native CSS Scroll Snap Points&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;esprima/changelog-at-2.4.1-·-jquery/esprima&quot;&gt;esprima/ChangeLog at 2.4.1 · jquery/esprima&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jquery/esprima/blob/2.4.1/ChangeLog&quot; title=&quot;esprima/ChangeLog at 2.4.1 · jquery/esprima&quot;&gt;github.com/jquery/esprima/blob/2.4.1/ChangeLog&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;esprima 2.4.0リリース。&lt;br&gt;
for-of、spread elementのサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;important-security-upgrades-for-node.js-and-io.js-—-medium&quot;&gt;Important security upgrades for node.js and io.js — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@iojs/important-security-upgrades-for-node-js-and-io-js-8ac14ece5852&quot; title=&quot;Important security upgrades for node.js and io.js — Medium&quot;&gt;medium.com/@iojs/important-security-upgrades-for-node-js-and-io-js-8ac14ece5852&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;セキュリティ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとio.jsにV8起因の脆弱性があったためセキュリティアップデートとしてNode.js v0.12.6、io.js-v2.3.3、io.js-v1.8.3がリリースされた&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.iojs.jp/important_security_issue.html&quot; title=&quot;Node.js と io.js のCritical Security Issue について&quot;&gt;Node.js と io.js のCritical Security Issue について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-jsx-with-typescript-–-minko-gechev&amp;#x27;s-blog&quot;&gt;Using JSX with TypeScript – Minko Gechev&amp;#x27;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.mgechev.com/2015/07/05/using-jsx-react-with-typescript&quot; title=&quot;Using JSX with TypeScript – Minko Gechev&amp;#39;s blog&quot;&gt;blog.mgechev.com/2015/07/05/using-jsx-react-with-typescript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのmasterに入ったJSXサポートについて&lt;br&gt;
1.6としてリリース予定のJSXを今試す方法&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aerotwist---react-+-performance-=-?&quot;&gt;Aerotwist - React + Performance = ?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aerotwist.com/blog/react-plus-performance-equals-what/&quot; title=&quot;Aerotwist - React + Performance = ?&quot;&gt;aerotwist.com/blog/react-plus-performance-equals-what/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;DOMは遅くてReactのVirtual DOMは早いと言われることがあるけどそれは本当なのか。&lt;br&gt;
写真を追加するサンプルをVanillaとReactで比較してみた結果から分かった事について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;perf-audit:-loading-performance-·-issue-#247-·-reddit/reddit-mobile&quot;&gt;Perf audit: Loading performance · Issue #247 · reddit/reddit-mobile&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reddit/reddit-mobile/issues/247&quot; title=&quot;Perf audit: Loading performance · Issue #247 · reddit/reddit-mobile&quot;&gt;github.com/reddit/reddit-mobile/issues/247&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Paul Irishによるredditのモバイルサイトのローディング完了までに45秒かかってる原因について報告してるIssue。&lt;br&gt;
Chrome開発者ツール、React Perf、discなどを使って何が原因であるかを見ていく方法について参考になる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-fast-are-web-workers?-✩-mozilla-hacks-–-the-web-developer-blog&quot;&gt;How fast are web workers? ✩ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/07/how-fast-are-web-workers/&quot; title=&quot;How fast are web workers? ✩ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2015/07/how-fast-are-web-workers/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebWorkerやSharedWorkerの起動コスト、メッセージの転送速度について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mozilla-games-technology-roadmap-|-future-releases&quot;&gt;Mozilla Games Technology Roadmap | Future Releases&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mozilla.org/futurereleases/2015/07/02/mozilla-games-technology-roadmap/&quot; title=&quot;Mozilla Games Technology Roadmap | Future Releases&quot;&gt;blog.mozilla.org/futurereleases/2015/07/02/mozilla-games-technology-roadmap/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Mozilla&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;future&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ウェブでプラグインフリーなゲームを実現するのに関連するIssueやロードマップ by Mozilla&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;breakouts&quot;&gt;Breakouts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jsbreakouts.org/&quot; title=&quot;Breakouts&quot;&gt;www.jsbreakouts.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptゲームエンジン版のTodoMVC。&lt;br&gt;
同じゲームを色々なゲームエンジンで実装したものを比較出来る&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;arkency/reactjs_koans&quot;&gt;arkency/reactjs_koans&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/arkency/reactjs_koans&quot; title=&quot;arkency/reactjs_koans&quot;&gt;github.com/arkency/reactjs_koans&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを学ぶための問題集&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;paul-kinlan-on-twitter:-&amp;quot;created-@chromiumdev-slack.-a-place-for-web-devs-to-talk-dev-and-chrome-join-☞-https://t.co/rar4itzesm-login-☞-https://t.co/8xliipc0f8&amp;quot;&quot;&gt;Paul Kinlan on Twitter: &amp;quot;Created @ChromiumDev slack. A place for web devs to talk dev and chrome Join ☞ https://t.co/RAr4iTzesM Login ☞ https://t.co/8xLiIpC0F8&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/Paul_Kinlan/status/598494432321773569&quot; title=&quot;Paul Kinlan on Twitter: \&amp;quot;Created @ChromiumDev slack. A place for web devs to talk dev and chrome Join ☞ https://t.co/RAr4iTzesM Login ☞ https://t.co/8xLiIpC0F8\&amp;quot;&quot;&gt;twitter.com/Paul_Kinlan/status/598494432321773569&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;community&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chromiumについての情報共有を目的としたSlackが開設された。&lt;br&gt;
開発者とのコミュニケーションや情報共有向け&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safe-javascript-templating&quot;&gt;Safe JavaScript Templating&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://yahoo.github.io/secure-handlebars/&quot; title=&quot;Safe JavaScript Templating&quot;&gt;yahoo.github.io/secure-handlebars/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;セキュリティ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Yahoo!製のAutomatic Contextual Escapingを持ったHandlebars互換のテンプレーエンジン。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/adonatwork/automatic-contextual-escaping-made-easy&quot; title=&quot;Frontend Security: Applying Contextual Escaping Automatically, or How…&quot;&gt;Frontend Security: Applying Contextual Escaping Automatically, or How…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yahoo/xss-filters&quot; title=&quot;yahoo/xss-filters&quot;&gt;yahoo/xss-filters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cycle.js&quot;&gt;Cycle.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://cyclejs.github.io/index.html&quot; title=&quot;Cycle.js&quot;&gt;cyclejs.github.io/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Rxを使った一方通行のデータフローとImmutabilityを実現するフレームワーク。&lt;em&gt;Model-View-Intent&lt;/em&gt;というアーキテクチャを持ち、ユーザからの入力を&lt;em&gt;Intent&lt;/em&gt;とし&lt;em&gt;Model&lt;/em&gt;へ通知し、&lt;em&gt;Model&lt;/em&gt;の変更を監視している&lt;em&gt;View&lt;/em&gt;(virtual-dom)が更新されるようなサイクルを作ることを目的としている。&lt;br&gt;
それらの通知と監視の仕組みにRxのObservableを利用している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://futurice.com/blog/reactive-mvc-and-the-virtual-dom&quot; title=&quot;Reactive MVC and the Virtual DOM — Futurice&quot;&gt;Reactive MVC and the Virtual DOM — Futurice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cyclejs/cycle-core/issues/49&quot; title=&quot;Cyclejs vs mercuryjs · Issue #49 · cyclejs/cycle-core&quot;&gt;Cyclejs vs mercuryjs · Issue #49 · cyclejs/cycle-core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-w3c-mobile-checker&quot;&gt;The W3C Mobile Checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://validator.w3.org/mobile-alpha/&quot; title=&quot;The W3C Mobile Checker&quot;&gt;validator.w3.org/mobile-alpha/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;W3Cによるモバイルフレンドリーかをチェックするツール。&lt;br&gt;
URLを入れると問題点と解決方法を提示してくれる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learning-webrtc---o&amp;#x27;reilly-media&quot;&gt;Learning WebRTC - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9781783983667.do&quot; title=&quot;Learning WebRTC - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9781783983667.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebRTCについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react:-up-&amp;amp;-running---o&amp;#x27;reilly-media&quot;&gt;React: Up &amp;amp; Running - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920042266.do&quot; title=&quot;React: Up &amp;amp; Running - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920042266.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2015年12月発売&lt;br&gt;
Reactについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon.com:-test-driven-javascript-development-ebook:-ravi-kumar-gupta,-harmeet-singh,-hetal-prajapati:-kindle-store&quot;&gt;Amazon.com: Test-driven JavaScript Development eBook: Ravi Kumar Gupta, Harmeet Singh, Hetal Prajapati: Kindle Store&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Test-driven-JavaScript-Development-Kumar-Gupta-ebook/dp/B010T266P6&quot; title=&quot;Amazon.com: Test-driven JavaScript Development eBook: Ravi Kumar Gupta, Harmeet Singh, Hetal Prajapati: Kindle Store&quot;&gt;www.amazon.com/Test-driven-JavaScript-Development-Kumar-Gupta-ebook/dp/B010T266P6&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年1月5日発売&lt;br&gt;
JavaScriptのTDD本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 06 Jul 2015 22:23:00 +0900</pubDate>
        <link>http://jser.info/2015/07/06/react-0.14-firefox39-es6/</link>
        <guid isPermaLink="true">http://jser.info/2015/07/06/react-0.14-firefox39-es6/</guid>
        
        <category>React</category>
        
        <category>Firefox</category>
        
        <category>JSer.info</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2015-06-30のJS: Ember Data Stableリリース、JavaScriptアンケート</title>
        <description>&lt;p&gt;JSer.info #234 - Ember DataがついにStableリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://emberjs.com/blog/2015/06/18/ember-data-1-13-released.html&quot; title=&quot;Ember.js - Ember Data v1.13 Released&quot;&gt;Ember.js - Ember Data v1.13 Released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2年ほど前に&lt;a href=&quot;http://emberjs.com/blog/2013/08/31/ember-1-0-released.html&quot; title=&quot;Ember Data 1.0 Beta 1&quot;&gt;Ember Data 1.0 Beta 1&lt;/a&gt;が公開されていましたが、その後も順調に変化を重ねて、今回Ember.jsのバージョンに併せてEmber Data 1.13としてリリースされました。&lt;/p&gt;

&lt;p&gt;リリース記事ではEmber Data 2.0に向けての変更点についても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-scene/javascript-scene-tech-survey-d2449a529ed&quot; title=&quot;JavaScript Scene Tech Survey Results — JavaScript Scene — Medium&quot;&gt;JavaScript Scene Tech Survey Results — JavaScript Scene — Medium&lt;/a&gt;という記事ではTwitterで&lt;a href=&quot;https://twitter.com/_ericelliott&quot; title=&quot;Eric Elliott&quot;&gt;Eric Elliott&lt;/a&gt;さんが中心となってJavaScriptについてアンケートを取った結果が公開されています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://monosnap.com/image/gH4VufcCf2VC8KtiXvauSawStslt7X.png&quot; alt=&quot;es6 usage&quot;&gt;&lt;/p&gt;

&lt;p&gt;ES6を使った事があるかや興味のあるES6の機能、興味のあるフレームワークなどについての回答がまとめられています。&lt;/p&gt;

&lt;p&gt;若干新しいもの好き、Node.jsユーザが多めで、DailyJSが行っている&lt;a href=&quot;http://dailyjs.com/2014/12/16/1333-javascript-survey-results/&quot; title=&quot;JavaScript Developer Survey&quot;&gt;JavaScript Developer Survey&lt;/a&gt;とは回答者の層が少し違う感じがして面白いと思います。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;突然の&lt;a href=&quot;https://azu.typeform.com/to/AGW5qu&quot;&gt;アンケート&lt;/a&gt;です。&lt;/p&gt;

&lt;!-- Change the width and height values to suit you best --&gt;

&lt;div class=&quot;typeform-widget&quot; data-url=&quot;https://azu.typeform.com/to/AGW5qu&quot; data-text=&quot;ES6&quot; style=&quot;width:100%;height:500px;&quot;&gt;&lt;/div&gt;

&lt;script&gt;(function(){var qs,js,q,s,d=document,gi=d.getElementById,ce=d.createElement,gt=d.getElementsByTagName,id=&#39;typef_orm&#39;,b=&#39;https://s3-eu-west-1.amazonaws.com/share.typeform.com/&#39;;if(!gi.call(d,id)){js=ce.call(d,&#39;script&#39;);js.id=id;js.src=b+&#39;widget.js&#39;;q=gt.call(d,&#39;script&#39;)[0];q.parentNode.insertBefore(js,q)}})()&lt;/script&gt;

&lt;div style=&quot;font-family: Sans-Serif;font-size: 12px;color: #999;opacity: 0.5; padding-top: 5px;&quot;&gt;Powered by &lt;a href=&quot;http://www.typeform.com/?utm_campaign=typeform_AGW5qu&amp;amp;utm_source=website&amp;amp;utm_medium=typeform&amp;amp;utm_content=typeform-embedded&amp;amp;utm_term=&quot; style=&quot;color: #999&quot; target=&quot;_blank&quot;&gt;Typeform&lt;/a&gt;&lt;/div&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-master-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at master · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/master/Changelog.md#550&quot; title=&quot;jsdom/Changelog.md at master · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/master/Changelog.md#550&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 5.5.0リリース。&lt;br&gt;
postMessageのサポート、&lt;code&gt;cloneNode&lt;/code&gt;と&lt;code&gt;importNode&lt;/code&gt;の問題を修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flow/changelog.md-at-master-·-facebook/flow&quot;&gt;flow/Changelog.md at master · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/blob/master/Changelog.md#v0131&quot; title=&quot;flow/Changelog.md at master · facebook/flow&quot;&gt;github.com/facebook/flow/blob/master/Changelog.md#v0131&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flow v0.13.1リリース。&lt;br&gt;
&lt;code&gt;flow ast&lt;/code&gt;でESTree ASTを出力するように。class式、binary/octal integer literalのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember-data-v1.13-released&quot;&gt;Ember.js - Ember Data v1.13 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2015/06/18/ember-data-1-13-released.html&quot; title=&quot;Ember.js - Ember Data v1.13 Released&quot;&gt;emberjs.com/blog/2015/06/18/ember-data-1-13-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember Data 1.13リリース。&lt;br&gt;
Ember Data初のStableリリースで、バージョンをEmberと合わせてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-0.24.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint 0.24.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2015/06/eslint-0.24.0-released&quot; title=&quot;ESLint 0.24.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2015/06/eslint-0.24.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 0.24.0リリース。&lt;br&gt;
ES6 Classesに関するルールの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vorlon.js-0.0.15-is-out-!---etienne-margraff---site-home---msdn-blogs&quot;&gt;Vorlon.js 0.0.15 is out ! - Etienne Margraff - Site Home - MSDN Blogs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/emargraff/archive/2015/06/24/vorlon-js-0-0-15-is-out.aspx&quot; title=&quot;Vorlon.js 0.0.15 is out ! - Etienne Margraff - Site Home - MSDN Blogs&quot;&gt;blogs.msdn.com/b/emargraff/archive/2015/06/24/vorlon-js-0-0-15-is-out.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptデバッグツールのVorlon.js 0.0.15リリース。&lt;br&gt;
ネットワークパネル、DOMパネル、プラグイン機能の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-orion-9.0-|-orion-news&quot;&gt;Announcing Orion 9.0 | Orion News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://planetorion.org/news/2015/06/language-tooling-goodness-in-orion-9-0/&quot; title=&quot;Announcing Orion 9.0 | Orion News&quot;&gt;planetorion.org/news/2015/06/language-tooling-goodness-in-orion-9-0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;IDE&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Orion 9.0リリース。&lt;br&gt;
Ternをベースとしたコード解析に変更し、コード補完やコードナビゲーション、リファクタリング機能の追加。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://codezine.jp/article/detail/8798&quot; title=&quot;Eclipse、Webブラウザ上で動作する統合開発環境「Orion 9.0」をリリース：CodeZine&quot;&gt;Eclipse、Webブラウザ上で動作する統合開発環境「Orion 9.0」をリリース：CodeZine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es5-+-facebook-jsxで書かれたjavascriptコードベースをtypescriptに移行させる---voyage-group-techlog&quot;&gt;ES5 + Facebook JSXで書かれたJavaScriptコードベースをTypeScriptに移行させる - VOYAGE GROUP techlog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://techlog.voyagegroup.com/entry/2015/06/24/170611&quot; title=&quot;ES5 + Facebook JSXで書かれたJavaScriptコードベースをTypeScriptに移行させる - VOYAGE GROUP techlog&quot;&gt;techlog.voyagegroup.com/entry/2015/06/24/170611&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptでES6 targetなコードを吐き出し、BabelでES5へ変換するビルドチェインの形成について。&lt;br&gt;
既存プロジェクトの段階的な移行ステップについて。&lt;/p&gt;

&lt;p&gt;追記: TypeScriptのmasterブランチにJSXサポートがマージされたので、この辺ももう少し構成が代わって行く可能性はありそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/3564&quot; title=&quot;JSX and `as` operator by RyanCavanaugh · Pull Request #3564 · Microsoft/TypeScript&quot;&gt;JSX and &lt;code&gt;as&lt;/code&gt; operator by RyanCavanaugh · Pull Request #3564 · Microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-scene-tech-survey-results-—-javascript-scene-—-medium&quot;&gt;JavaScript Scene Tech Survey Results — JavaScript Scene — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-scene/javascript-scene-tech-survey-d2449a529ed&quot; title=&quot;JavaScript Scene Tech Survey Results — JavaScript Scene — Medium&quot;&gt;medium.com/javascript-scene/javascript-scene-tech-survey-d2449a529ed&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Twitterなどで行ったJavaScriptアンケートの結果発表。&lt;br&gt;
Node.jsのユーザーが多めで、ES6を利用したことがある人が半分程度、関心のあるフレームワークなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;metaprogramming-in-es6:-symbols-and-why-they&amp;#x27;re-awesome&quot;&gt;Metaprogramming in ES6: Symbols and why they&amp;#x27;re awesome&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/&quot; title=&quot;Metaprogramming in ES6: Symbols and why they&amp;#39;re awesome&quot;&gt;blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6とメタプログラミング。&lt;br&gt;
Symbolの使い方。Symbol.hasInstance、Symbol.iterator、Symbol.matchなどそれぞれを定義しておいた時の挙動について書かれてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript---web-audioの新しいapiについてざっくり解説---qiita&quot;&gt;JavaScript - Web Audioの新しいAPIについてざっくり解説 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/mohayonao/items/ace81c01892321702687&quot; title=&quot;JavaScript - Web Audioの新しいAPIについてざっくり解説 - Qiita&quot;&gt;qiita.com/mohayonao/items/ace81c01892321702687&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;新しく増えたWeb Audio APIとそのpolyfillについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mohayonao/web-audio-api-shim/&quot; title=&quot;mohayonao/web-audio-api-shim&quot;&gt;mohayonao/web-audio-api-shim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-guide-to-react.js-tools-and-libraries-|-toptal&quot;&gt;A Guide to React.js Tools and Libraries | Toptal&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.toptal.com/react/navigating-the-react-ecosystem&quot; title=&quot;A Guide to React.js Tools and Libraries | Toptal&quot;&gt;www.toptal.com/react/navigating-the-react-ecosystem&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactで見るJavaScriptのエコシステム、ツール、ES6やTranspilerなどについて。&lt;br&gt;
またFluxの実装ライブラリとして&lt;a href=&quot;https://github.com/goatslacker/alt&quot;&gt;Alt&lt;/a&gt;の紹介やReactの関連ライブラリについてなど幅広く書かれてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-js-build-tools-2015&quot;&gt;The State of JS Build Tools 2015&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.walkercoderanger.com/blog/2015/06/state-of-js-build-tools-2015/&quot; title=&quot;The State of JS Build Tools 2015&quot;&gt;www.walkercoderanger.com/blog/2015/06/state-of-js-build-tools-2015/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのビルドツールであるGrunt、Gulp、Broccoli、Brunchについて。&lt;br&gt;
それぞれの簡単な紹介と何を基準にこれらのツールを選ぶのかという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-backbone-apps-using-flux-—-medium&quot;&gt;Building Backbone apps using Flux — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@victordoss/building-backbone-apps-using-flux-f656fd8a873a&quot; title=&quot;Building Backbone apps using Flux — Medium&quot;&gt;medium.com/@victordoss/building-backbone-apps-using-flux-f656fd8a873a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;backbone.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Backbone.jsでFlux的なデータの流れにするためにModeをラップしてDispatcherを入れるライブラリについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sass---scssと付き合う上でやって(知って)よかったこと8選---qiita&quot;&gt;Sass - SCSSと付き合う上でやって(知って)よかったこと8選 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/suisho/items/e996c42798bbb17add13&quot; title=&quot;Sass - SCSSと付き合う上でやって(知って)よかったこと8選 - Qiita&quot;&gt;qiita.com/suisho/items/e996c42798bbb17add13&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Sass&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Sassに関連するTipsやライブラリ、ツールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-tv---screencast-tutorials-for-web-developers.&quot;&gt;Front End TV - Screencast tutorials for web developers.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.frontend.tv/&quot; title=&quot;Front End TV - Screencast tutorials for web developers.&quot;&gt;www.frontend.tv/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptやCSSや関連するツールなどについて5分程度のスクリーンキャストをやっているサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html5test---how-well-does-your-browser-support-html5?&quot;&gt;HTML5test - How well does your browser support HTML5?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://html5test.com/&quot; title=&quot;HTML5test - How well does your browser support HTML5?&quot;&gt;html5test.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML5&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザの実装してるHTMLやJavaScriptの機能をテストしてスコアを出すサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-0.13-日本語リファレンス-|-js-studio&quot;&gt;React 0.13 日本語リファレンス | js STUDIO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://js.studio-kingdom.com/react&quot; title=&quot;React 0.13 日本語リファレンス | js STUDIO&quot;&gt;js.studio-kingdom.com/react&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファレンス&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactリファレンスの日本語訳&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;timdp/es6-promise-pool&quot;&gt;timdp/es6-promise-pool&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timdp/es6-promise-pool&quot; title=&quot;timdp/es6-promise-pool&quot;&gt;github.com/timdp/es6-promise-pool&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promise.allのように並列に処理を行うが、一度に何個づつやるかを決めて処理できるPromiseの補助ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wavesurfer.js&quot;&gt;wavesurfer.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.wavesurfer.fm/&quot; title=&quot;wavesurfer.js&quot;&gt;www.wavesurfer.fm/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audioの波形をCanvasで描画してくれるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;karpathy/convnetjs&quot;&gt;karpathy/convnetjs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/karpathy/convnetjs&quot; title=&quot;karpathy/convnetjs&quot;&gt;github.com/karpathy/convnetjs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでニューラルネットワークの実装ライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 30 Jun 2015 20:28:00 +0900</pubDate>
        <link>http://jser.info/2015/06/30/ember-data-survey/</link>
        <guid isPermaLink="true">http://jser.info/2015/06/30/ember-data-survey/</guid>
        
        <category>Ember</category>
        
        <category>アンケート</category>
        
        <category>JavaScript</category>
        
        <category>ECMAScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2015-06-23のJS: ECMAScript 6公開、SVGガイド、JSConf US 2015</title>
        <description>&lt;p&gt;JSer.info #233 - ECMAScript 2015(aka. ES6)がEcma標準として承認されました！ &lt;img class=&#39;emoji&#39; title=&#39;:tada:&#39; alt=&#39;:tada:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f389.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://esdiscuss.org/topic/ecmascript-2015-is-now-an-ecma-standard&quot; title=&quot;ECMAScript 2015 is now an Ecma Standard&quot;&gt;ECMAScript 2015 is now an Ecma Standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot; title=&quot;Standard ECMA-262&quot;&gt;Standard ECMA-262&lt;/a&gt;にPDFとHTMLでES6の仕様書が公開されています。&lt;br&gt;
正式な仕様として公開されたのでこれからブラウザの実装も進んだり、学ぶためのリソースも増えてくると思います。&lt;/p&gt;

&lt;p&gt;今だと、&lt;a href=&quot;http://teppeis.hatenablog.com/entry/2015/06/webdb-press-es6-and-yapc-asia&quot; title=&quot;WEB+DB PRESS Vol.87&quot;&gt;WEB+DB PRESS Vol.87&lt;/a&gt;で概要を把握して、&lt;br&gt;
&lt;a href=&quot;http://es6-features.org/&quot;&gt;http://es6-features.org/&lt;/a&gt;で簡単にどんな機能が増えたのかを見て、&lt;a href=&quot;https://github.com/yosuke-furukawa/tower-of-babel&quot; title=&quot;tower-of-babel&quot;&gt;tower-of-babel&lt;/a&gt;で実際に書いてみたり、&lt;br&gt;
もっと深く知りたい場合は&lt;a href=&quot;http://exploringjs.com/&quot; title=&quot;Exploring ES6&quot;&gt;Exploring ES6&lt;/a&gt;を読むなどするのが良い気がします。&lt;/p&gt;

&lt;p&gt;以前書いた、Promise本もアップデートしているので、Promiseについてはこっちを見てみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/06/23/promises-book-v1.5/&quot; title=&quot;ES6がリリースされたのでPromiseについて学びましょう | Web Scratch&quot;&gt;ES6がリリースされたのでPromiseについて学びましょう | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://svgontheweb.com/&quot; title=&quot;A Practical Guide to SVGs on the web&quot;&gt;A Practical Guide to SVGs on the web&lt;/a&gt;というサイトでは、現在&lt;a href=&quot;http://caniuse.com/#feat=svg&quot;&gt;殆どのブラウザでサポートされている&lt;/a&gt;SVGについて書かれています。&lt;/p&gt;

&lt;p&gt;ファイルサイズの最適化や表示方法、JavaScriptやCSSとの連携方法などについて分かりやすくまとまっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://2015.jsconf.us/&quot; title=&quot;JSConf US 2015 - The best conference for JS and the Web. Period&quot;&gt;JSConf US 2015&lt;/a&gt;の動画が一部公開され始めています。&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/videoseries?list=PL37ZVnwpeshEkVjFZlLm1krvx0mPYPOoq&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;それぞれの動画に字幕もついているので、気になる発表を探してみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-2015-is-now-an-ecma-standard&quot;&gt;ECMAScript 2015 is now an Ecma Standard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://esdiscuss.org/topic/ecmascript-2015-is-now-an-ecma-standard&quot; title=&quot;ECMAScript 2015 is now an Ecma Standard&quot;&gt;esdiscuss.org/topic/ecmascript-2015-is-now-an-ecma-standard&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript 2015(ES6)正式リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/&quot; title=&quot;ECMAScript 2015 Language Specification – ECMA-262 6th Edition&quot;&gt;ECMAScript 2015 Language Specification – ECMA-262 6th Edition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel/changelog.md-at-master-·-babel/babel&quot;&gt;babel/CHANGELOG.md at master · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/blob/master/CHANGELOG.md#560&quot; title=&quot;babel/CHANGELOG.md at master · babel/babel&quot;&gt;github.com/babel/babel/blob/master/CHANGELOG.md#560&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 5.6.0リリース。&lt;br&gt;
&lt;code&gt;--watch&lt;/code&gt;開始時にパースエラーが起きてもCLIを停止しないように、transformerの一部をpluginとして分離するなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/commit/3247851019dd350504689ad57c42ef45eb2381c7&quot; title=&quot;transformers&quot;&gt;transformers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel-plugins&quot; title=&quot;Babel Plugins&quot;&gt;Babel Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;qooxdoo-5.0-released-|-qooxdoo-news&quot;&gt;qooxdoo 5.0 released | qooxdoo News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://news.qooxdoo.org/qooxdoo-5-0-released&quot; title=&quot;qooxdoo 5.0 released | qooxdoo News&quot;&gt;news.qooxdoo.org/qooxdoo-5-0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのRIAフレームワークであるqooxdoo 5.0リリース。&lt;br&gt;
qx.Website widgetsの追加、MSEdgeの対応、Pointer Eventsなどの対応、SVG、Fullscreen APIの対応、WebDriverを使ってテストの導入など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v0.12.5-(stable)&quot;&gt;Node v0.12.5 (Stable)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.nodejs.org/2015/06/22/node-v0-12-5-stable/&quot; title=&quot;Node v0.12.5 (Stable)&quot;&gt;blog.nodejs.org/2015/06/22/node-v0-12-5-stable/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;セキュリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v0.12.5リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-jshint-2.8.0-·-jshint/jshint&quot;&gt;Release JSHint 2.8.0 · jshint/jshint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jshint/jshint/releases/tag/2.8.0&quot; title=&quot;Release JSHint 2.8.0 · jshint/jshint&quot;&gt;github.com/jshint/jshint/releases/tag/2.8.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSHint 2.8.0リリース。&lt;br&gt;
&lt;code&gt;module&lt;/code&gt;でコードをES6 moduleとみなしてチェック出来るように、バグ修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-foundation-advances-community-collaboration,-announces-new-members-and-ratified-technical-governance-|-the-linux-foundation&quot;&gt;Node.js Foundation Advances Community Collaboration, Announces New Members and Ratified Technical Governance | The Linux Foundation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.linuxfoundation.org/news-media/announcements/2015/06/nodejs-foundation-advances-community-collaboration-announces-new&quot; title=&quot;Node.js Foundation Advances Community Collaboration, Announces New Members and Ratified Technical Governance | The Linux Foundation&quot;&gt;www.linuxfoundation.org/news-media/announcements/2015/06/nodejs-foundation-advances-community-collaboration-announces-new&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js Foundationについての公式アナウンス。&lt;br&gt;
Node.jsとio.jsのマージやガバナンスモデルについての同意がとれて、Linux FoundationのコラボレーションプロジェクトとしてNode.js Foundationが誕生した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linuxfoundation.jp/news-media/announcements/2015/06/jp_nodejs-foundation-advances-community-collaboration-announces-new&quot; title=&quot;Node.js Foundation がコミュニティのコラボレーションを進化: 新メンバーと運用指針となる技術ガバナンスを発表 | The Linux Foundation&quot;&gt;Node.js Foundation がコミュニティのコラボレーションを進化: 新メンバーと運用指針となる技術ガバナンスを発表 | The Linux Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;brendan-eich-»-blog-archive-»-from-asm.js-to-webassembly&quot;&gt;Brendan Eich » Blog Archive » From ASM.JS to WebAssembly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://brendaneich.com/2015/06/from-asm-js-to-webassembly/&quot; title=&quot;Brendan Eich » Blog Archive » From ASM.JS to WebAssembly&quot;&gt;brendaneich.com/2015/06/from-asm-js-to-webassembly/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;asm.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザ向けのバイナリフォーマットの標準化プロジェクトとしてWebAssemblyが公開された。&lt;br&gt;
サイズやデコードの効率化を目的としたバイナリフォーマットで、第一段階の目標としてはasm.jsのバイナリ版相当の機能を予定している。&lt;/p&gt;

&lt;p&gt;JavaScriptを置き換えるものではなく、JavaScriptが苦手な部分を補完できるような立ち位置であることなどが&lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/FAQ.md&quot; title=&quot;FAQ&quot;&gt;FAQ&lt;/a&gt;にかかれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.publickey1.jp/blog/15/webassembly.html&quot; title=&quot;主要ブラウザで実行可能なバイナリ形式「WebAssembly」の開発がスタート。Chrome、WebKit、Firefox、Microsoft Edge、LLVM、Unityらがサポートを相次いで表明 － Publickey&quot;&gt;主要ブラウザで実行可能なバイナリ形式「WebAssembly」の開発がスタート。Chrome、WebKit、Firefox、Microsoft Edge、LLVM、Unityらがサポートを相次いで表明 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/HighLevelGoals.md&quot; title=&quot;design/HighLevelGoals.md at master · WebAssembly/design&quot;&gt;design/HighLevelGoals.md at master · WebAssembly/design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/FAQ.md&quot; title=&quot;design/FAQ.md at master · WebAssembly/design&quot;&gt;design/FAQ.md at master · WebAssembly/design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rebuild.fm/97/&quot; title=&quot;Rebuild: 97: Minimum Viable Standard (omo)&quot;&gt;Rebuild: 97: Minimum Viable Standard (omo)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webassembly:-a-binary-format-for-the-web&quot;&gt;WebAssembly: a binary format for the web&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2015/06/web-assembly.html&quot; title=&quot;WebAssembly: a binary format for the web&quot;&gt;www.2ality.com/2015/06/web-assembly.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyの概要解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-in-depth:-collections-✩-mozilla-hacks-–-the-web-developer-blog&quot;&gt;ES6 In Depth: Collections ✩ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-collections/&quot; title=&quot;ES6 In Depth: Collections ✩ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2015/06/es6-in-depth-collections/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SetとMapについて。&lt;br&gt;
それぞれのメソッドの解説、JSと他の言語でのMapの特性の違い、列挙の順序問題、WeakSet、WeakMapが何故必要になるのかについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-practical-guide-to-svgs-on-the-web&quot;&gt;A Practical Guide to SVGs on the web&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://svgontheweb.com/&quot; title=&quot;A Practical Guide to SVGs on the web&quot;&gt;svgontheweb.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVGの使い方ガイドライン。&lt;br&gt;
最適化、使い方、表示方法のまとめ、CSSやJavaScriptからの操作方法、レスポンシブ、アニメーションなどSVGについてまとまってる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;midi,javascript---javascriptでmidiファイルを解析してみる-1---qiita&quot;&gt;MIDI,JavaScript - JavaScriptでMIDIファイルを解析してみる 1 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/PianoScoreJP/items/2f03ae61d91db0334d45&quot; title=&quot;MIDI,JavaScript - JavaScriptでMIDIファイルを解析してみる 1 - Qiita&quot;&gt;qiita.com/PianoScoreJP/items/2f03ae61d91db0334d45&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでMIDIファイル(SMF)を解析してヘッダ情報やトラックを取り出すチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsconf-us-2015---youtube&quot;&gt;JSConf US 2015 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL37ZVnwpeshEkVjFZlLm1krvx0mPYPOoq&quot; title=&quot;JSConf US 2015 - YouTube&quot;&gt;www.youtube.com/playlist?list=PL37ZVnwpeshEkVjFZlLm1krvx0mPYPOoq&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSConf US 2015の動画が公開された。&lt;br&gt;
それぞれの動画の文字起こしをしたGistも公開されている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2015.jsconf.us/&quot; title=&quot;JSConf US 2015 - The best conference for JS and the Web. Period&quot;&gt;JSConf US 2015 - The best conference for JS and the Web. Period&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/una/js-conf-notes&quot; title=&quot;una/js-conf-notes&quot;&gt;una/js-conf-notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-live&quot;&gt;JavaScript Live&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jslive.com/&quot; title=&quot;JavaScript Live&quot;&gt;jslive.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;RubyFlowみたいなJavaScriptのコミュニティニュースサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript.com&quot;&gt;JavaScript.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.javascript.com/&quot; title=&quot;JavaScript.com&quot;&gt;www.javascript.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CodeSchoolによるJavaScript初心者向けの学習リソースの紹介、コミュニティによる記事紹介などをしているサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;custom-elements---explore-the-world-of-web-components&quot;&gt;Custom Elements - Explore the world of Web Components&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://customelements.io/&quot; title=&quot;Custom Elements - Explore the world of Web Components&quot;&gt;customelements.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Bowerかnpmのキーワードにweb-componentsがついてるものを検索出来るサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oceanhouse21/dokker&quot;&gt;oceanhouse21/dokker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oceanhouse21/dokker&quot; title=&quot;oceanhouse21/dokker&quot;&gt;github.com/oceanhouse21/dokker&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSDocのコメントからlodashのようなドキュメントページ/Markdownを生成してくれるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;trueadm/t7&quot;&gt;trueadm/t7&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/trueadm/t7&quot; title=&quot;trueadm/t7&quot;&gt;github.com/trueadm/t7&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Template Stringsを使ったテンプレートライブラリ。&lt;br&gt;
結果をReactやその他のvirtual-domライブラリを使ってるもの向けへ出力できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sighjs/sigh&quot;&gt;sighjs/sigh&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sighjs/sigh&quot; title=&quot;sighjs/sigh&quot;&gt;github.com/sighjs/sigh&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptビルドツール。&lt;br&gt;
gulp pluginをサポートしていて、デフォルトで並列タスク、インクリメンタルリビルド、Source Mapの対応など他のビルドツールの特徴も持たせてる&lt;br&gt;
http://sighjs.github.io/&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eorroe/nodelist-prototype-extension&quot;&gt;eorroe/NodeList-Prototype-Extension&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eorroe/NodeList-Prototype-Extension&quot; title=&quot;eorroe/NodeList-Prototype-Extension&quot;&gt;github.com/eorroe/NodeList-Prototype-Extension&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;DOM NodeのCollectionに対して操作出来るライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 23 Jun 2015 21:06:00 +0900</pubDate>
        <link>http://jser.info/2015/06/23/es6-svg-jsconfus/</link>
        <guid isPermaLink="true">http://jser.info/2015/06/23/es6-svg-jsconfus/</guid>
        
        <category>ES6</category>
        
        <category>Promise</category>
        
        <category>SVG</category>
        
        <category>動画</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
