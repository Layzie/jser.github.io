// LICENSE : MIT
"use strict";
var _prototypeProperties = function (child, staticProps, instanceProps) {
  if (staticProps) {
    Object.defineProperties(child, staticProps);
  }
  if (instanceProps) {
    Object.defineProperties(child.prototype, instanceProps);
  }
};

/**
 * RuleHelper is helper class for textlint.
 * @class RuleHelper
 */
var RuleHelper = (function () {
  var RuleHelper =
  /**
   * Initialize RuleHelper with RuleContext object.
   * @param {RuleContext} ruleContext the ruleContext is context object of the rule.
   */
  function RuleHelper(ruleContext) {
    this.ruleContext = ruleContext;
  };

  _prototypeProperties(RuleHelper, null, {
    getParents: {

      /**
       * Get parents of node.
       * The parent nodes are returned in order from the closest parent to the outer ones.
       * {@link node} is not contained in the results.
       * @param {TxtNode} node the node is start point.
       * @returns {TxtNode[]}
       */
      value: function (node) {
        var result = [];
        var parent = node.parent;
        while (parent != null) {
          result.push(parent);
          parent = parent.parent;
        }
        return result;
      },
      writable: true,
      enumerable: true,
      configurable: true
    },
    isChildNode: {

      /**
       * Return true if `node` is wrapped any one of node {@link types}.
       * @param {TxtNode} node is target node
       * @param {string[]} types are wrapped target node
       * @returns {boolean}
       */
      value: function (node, types) {
        var parents = this.getParents(node);
        var parentsTypes = parents.map(function (parent) {
          return parent.type;
        });
        return types.some(function (type) {
          return parentsTypes.some(function (parentType) {
            return parentType === type;
          });
        });
      },
      writable: true,
      enumerable: true,
      configurable: true
    }
  });

  return RuleHelper;
})();

exports.RuleHelper = RuleHelper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy90ZXh0bGludC1ydWxlLWhlbHBlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQU1hLFVBQVU7TUFBVixVQUFVOzs7OztBQUtSLFdBTEYsVUFBVSxDQUtQLFdBQVcsRUFBRTtBQUNyQixRQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztHQUNsQzs7dUJBUFEsVUFBVTtBQWdCbkI7Ozs7Ozs7OzthQUFVLFVBQUMsSUFBSSxFQUFFO0FBQ2IsWUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0FBQ2hCLFlBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7QUFDekIsZUFBTyxNQUFNLElBQUksSUFBSSxFQUFFO0FBQ25CLGdCQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3BCLGdCQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztTQUMxQjtBQUNELGVBQU8sTUFBTSxDQUFDO09BQ2pCOzs7OztBQVFELGVBQVc7Ozs7Ozs7O2FBQUEsVUFBQyxJQUFJLEVBQUUsS0FBSyxFQUFFO0FBQ3JCLFlBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEMsWUFBSSxZQUFZLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLE1BQU0sRUFBRTtBQUM3QyxpQkFBTyxNQUFNLENBQUMsSUFBSSxDQUFDO1NBQ3RCLENBQUMsQ0FBQztBQUNILGVBQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksRUFBRTtBQUM5QixpQkFBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsVUFBVSxFQUFFO0FBQzNDLG1CQUFPLFVBQVUsS0FBSyxJQUFJLENBQUM7V0FDOUIsQ0FBQyxDQUFDO1NBQ04sQ0FBQyxDQUFDO09BQ047Ozs7Ozs7U0ExQ1EsVUFBVTs7O1FBQVYsVUFBVSxHQUFWLFVBQVUiLCJmaWxlIjoic3JjL3RleHRsaW50LXJ1bGUtaGVscGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTElDRU5TRSA6IE1JVFxuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIFJ1bGVIZWxwZXIgaXMgaGVscGVyIGNsYXNzIGZvciB0ZXh0bGludC5cbiAqIEBjbGFzcyBSdWxlSGVscGVyXG4gKi9cbmV4cG9ydCBjbGFzcyBSdWxlSGVscGVyIHtcbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplIFJ1bGVIZWxwZXIgd2l0aCBSdWxlQ29udGV4dCBvYmplY3QuXG4gICAgICogQHBhcmFtIHtSdWxlQ29udGV4dH0gcnVsZUNvbnRleHQgdGhlIHJ1bGVDb250ZXh0IGlzIGNvbnRleHQgb2JqZWN0IG9mIHRoZSBydWxlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJ1bGVDb250ZXh0KSB7XG4gICAgICAgIHRoaXMucnVsZUNvbnRleHQgPSBydWxlQ29udGV4dDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgcGFyZW50cyBvZiBub2RlLlxuICAgICAqIFRoZSBwYXJlbnQgbm9kZXMgYXJlIHJldHVybmVkIGluIG9yZGVyIGZyb20gdGhlIGNsb3Nlc3QgcGFyZW50IHRvIHRoZSBvdXRlciBvbmVzLlxuICAgICAqIHtAbGluayBub2RlfSBpcyBub3QgY29udGFpbmVkIGluIHRoZSByZXN1bHRzLlxuICAgICAqIEBwYXJhbSB7VHh0Tm9kZX0gbm9kZSB0aGUgbm9kZSBpcyBzdGFydCBwb2ludC5cbiAgICAgKiBAcmV0dXJucyB7VHh0Tm9kZVtdfVxuICAgICAqL1xuICAgIGdldFBhcmVudHMobm9kZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICAgIHZhciBwYXJlbnQgPSBub2RlLnBhcmVudDtcbiAgICAgICAgd2hpbGUgKHBhcmVudCAhPSBudWxsKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChwYXJlbnQpO1xuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybiB0cnVlIGlmIGBub2RlYCBpcyB3cmFwcGVkIGFueSBvbmUgb2Ygbm9kZSB7QGxpbmsgdHlwZXN9LlxuICAgICAqIEBwYXJhbSB7VHh0Tm9kZX0gbm9kZSBpcyB0YXJnZXQgbm9kZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nW119IHR5cGVzIGFyZSB3cmFwcGVkIHRhcmdldCBub2RlXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgaXNDaGlsZE5vZGUobm9kZSwgdHlwZXMpIHtcbiAgICAgICAgdmFyIHBhcmVudHMgPSB0aGlzLmdldFBhcmVudHMobm9kZSk7XG4gICAgICAgIHZhciBwYXJlbnRzVHlwZXMgPSBwYXJlbnRzLm1hcChmdW5jdGlvbiAocGFyZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnR5cGU7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHlwZXMuc29tZShmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudHNUeXBlcy5zb21lKGZ1bmN0aW9uIChwYXJlbnRUeXBlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcmVudFR5cGUgPT09IHR5cGU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufSJdfQ==

//# sourceMappingURL=textlint-rule-helper-compiled.js.map